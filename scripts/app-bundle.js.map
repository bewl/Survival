{"version":3,"sources":["src/itemenums.ts","D:/Projects/Survive/src/item.js","src/helpers.ts","src/app.ts","src/environment.ts","D:/Projects/Survive/src/game.js","D:/Projects/Survive/src/input.js","src/inventory.ts","src/items.ts","src/item-context.ts","D:/Projects/Survive/src/item-module.js","src/main.ts","src/player.ts","D:/Projects/Survive/src/designer/item-designer.js","src/resources/index.ts","D:/Projects/Survive/src/app.html","D:/Projects/Survive/src/designer/item-designer.html"],"names":[],"mappings":";;IAAA,WAAY,cAAc;QACtB,mDAAI,CAAA;QACJ,qDAAK,CAAA;QACL,uDAAM,CAAA;QACN,mDAAI,CAAA;QACJ,2DAAQ,CAAA;QACR,mDAAI,CAAA;QACJ,6DAAS,CAAA;IACb,CAAC,EARW,sBAAc,KAAd,sBAAc,QAQzB;IARD,IAAY,cAAc,GAAd,sBAQX,CAAA;;;ACRD;AACA;AACA;AACA;;;ICAA,yBAAgC,CAAO;QACnC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,CAAC,EAAJ,CAAI,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,KAAK,QAAQ,EAArB,CAAqB,CAAC,CAAC;IAC5E,CAAC;IAFe,uBAAe,kBAE9B,CAAA;;;;;ICAD;QAME,aAAY,IAAI;YAFT,iBAAY,GAAW,CAAC,CAAA;YAG7B,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YACxE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC1B,CAAC;QAcH,UAAC;IAAD,CAzBA,AAyBC,IAAA;IAzBY,WAAG,MAyBf,CAAA;;;;;IC9BD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;ACHF;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;;;ICCA;QAAA;YACY,eAAU,GAAU,IAAI,CAAC;YAQzB,eAAU,GAAU,IAAI,CAAC;QAoBrC,CAAC;QA3BG,sBAAW,gCAAS;iBAApB;gBACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAC3B,CAAC;iBACD,UAAqB,KAAY;gBAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC;;;WAHA;QAMD,sBAAW,gCAAS;iBAApB;gBACI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAC3B,CAAC;iBACD,UAAqB,KAAY;gBAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC;;;WAHA;QAKD,2BAAO,GAAP;QAIA,CAAC;QAED,8BAAU,GAAV,UAAW,IAAS;QAIpB,CAAC;QAEL,gBAAC;IAAD,CA7BA,AA6BC,IAAA;IA7BY,iBAAS,YA6BrB,CAAA;;;;;IC/BD,IAAI,KAAK,GAAe;QACpB;YACI,OAAO,EAAE,SAAS;YAClB,aAAa,EAAE,uBAAuB;YACtC,UAAU,EAAE,MAAM;YAClB,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,GAAG;YACb,QAAQ,EAAE,SAAS;SACtB;KACJ,CAAC;IAEF;sBAAe,KAAK,CAAC;;;;;ICXrB;QAGI;YAFO,UAAK,GAAe,IAAI,CAAC;YAG5B,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;QAED,+BAAS,GAAT;YAAA,iBAIC;YAHG,eAAK,CAAC,OAAO,CAAC,UAAA,IAAI;gBACd,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC,CAAC,CAAA;QACN,CAAC;QAED,6BAAO,GAAP,UAAQ,IAAS;YACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;QAED,oCAAc,GAAd,UAAe,KAAY;YACvB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAK,KAAK,KAAK,EAApB,CAAoB,CAAC,CAAC;QACzD,CAAC;QACL,kBAAC;IAAD,CApBA,AAoBC,IAAA;IApBY,mBAAW,cAoBvB,CAAA;;;ACvBD;AACA;AACA;AACA;;;ICEM,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;;;;;;;;;;ICrBD;QAGI,gBAAY,SAAS;YAFd,cAAS,GAAa,IAAI,CAAC;YAG9B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC/B,CAAC;QANL;YAAC,0BAAM,CAAC,qBAAS,CAAC;;kBAAA;QAOlB,aAAC;IAAD,CANA,AAMC,IAAA;IANY,cAAM,SAMlB,CAAA;;;ACVD;AACA;AACA;AACA;;;ICDA,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;ACJD;ACAA","file":"app-bundle.js","sourcesContent":["export enum ItemCategories {\r\n    FOOD,\r\n    DRINK,\r\n    WEAPON,\r\n    AMMO,\r\n    CLOTHING,\r\n    TOOL,\r\n    STRUCTURE\r\n}",null,"interface Enum {\r\n    [id: number]: string\r\n}\r\nexport function GetEnumElements(e: Enum): Array<string> {\r\n    return Object.keys(e).map(a => e[a]).filter(a => typeof a === 'string');\r\n}\r\n","import { inject } from 'aurelia-framework';\nimport * as ItemEnums from './itemenums';\nimport { Item } from './item';\nimport * as helpers from './helpers'\n\nexport class App {\n  public itemList:Array<Item>;\n  public item: Item;\n  public itemCategories: Array<string>;\n  public itemLifespan: number = 0 //infinite;\n\n  constructor(item) {\n    this.itemCategories = helpers.GetEnumElements(ItemEnums.ItemCategories);\n    this.item = item;\n\n    this.item.lifespan = 30;\n  }\n  //Change out options based on category selected (i.e. Weapon (what ammo type?))\n  \n  /********\n   identify lists for category selections\n  ********/\n  //- Item category\n  \n  //Lifetime timer (optional random)\n  //add item\n  //remove item\n  //select item\n  //save item\n  //sort items\n}\n","export default {\n  debug: true,\n  testing: true\n};\n",null,null,"import {inject} from 'aurelia-framework';\r\nimport {Item} from './item';\r\n\r\n\r\nexport class Inventory {\r\n    private _volumeCap:number = null;\r\n    public get volumeCap():number {\r\n        return this._volumeCap;\r\n    }\r\n    public set volumeCap(value:number) {\r\n        this._volumeCap = value;\r\n    }\r\n\r\n    private _weightCap:number = null;\r\n    public get weightCap():number {\r\n        return this._weightCap;\r\n    }\r\n    public set weightCap(value:number) {\r\n        this._weightCap = value;\r\n    }\r\n\r\n    AddItem() {\r\n        //update volumeCurrent\r\n        //update weightCurrent\r\n        //run any 'equip' script associated with item\r\n    }\r\n\r\n    RemoveItem(item:Item) {\r\n        //update volumeCurrent\r\n        //update weightCurrent\r\n        //run any 'remove' script associated with item\r\n    }\r\n\r\n}","import {Item} from \"./item\";\r\n\r\nlet items:Array<Item> = [\r\n    {\r\n        \"title\": \"Bandage\",\r\n        \"description\": \"This is a description\",\r\n        \"category\": \"TOOL\",\r\n        \"lifespan\": 0,\r\n        \"volume\": 0.5,\r\n        \"weight\": 0.5,\r\n        \"module\": \"bandage\"\r\n    }\r\n];\r\n\r\nexport default items;\r\n\r\n\r\n","import {Item} from \"./item\";\r\nimport items from \"./items\";\r\n\r\nexport class ItemContext {\r\n    public items:Array<Item> = null;\r\n\r\n    constructor() {\r\n        this.LoadItems();\r\n    }\r\n\r\n    LoadItems() {\r\n        items.forEach(item => {\r\n            this.AddItem(item);\r\n        })\r\n    }\r\n\r\n    AddItem(item:Item) {\r\n        this.items.push(item);\r\n    }\r\n\r\n    GetItemByTitle(title:string):Item {\r\n        return this.items.find(item => item.title === title);\r\n    }\r\n}",null,"import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\r\nimport {Inventory} from './inventory';\r\n\r\n@inject(Inventory)\r\nexport class Player {\r\n    public inventory:Inventory = null;\r\n\r\n    constructor(inventory) {\r\n        this.inventory = inventory;\r\n    }\r\n}",null,"import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null],"sourceRoot":"..\\src"}