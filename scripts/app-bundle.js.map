{"version":3,"sources":["src/helpers.ts","src/inventory/inventory.ts","src/actor/health.ts","src/tile/tile.ts","src/tile/data/tiles.ts","src/world/chunk.ts","src/world/world.ts","src/actor/actor.ts","src/actor/monster.ts","src/events/player-moved-event.ts","src/actor/player.ts","src/item/item-module.ts","src/item/stats/item-stats.ts","src/item/stats/weapon-stats.ts","src/item/item.ts","src/item/data/items.ts","src/item/data/weapon-stats.ts","src/item/data/item-stats.ts","src/item/item-context.ts","src/input/input.ts","src/events/render-event.ts","src/camera.ts","src/game.ts","src/renderer.ts","src/app.ts","src/environment.ts","src/item/modules/knife.ts","src/item/modules/hunting-knife.ts","src/item/modules/bandage.ts","src/item/item-module-containers.ts","src/main.ts","src/input/keybinds.ts","src/resources/index.ts","src/utility/vector.ts","src/tile/modules/tree.ts","D:/Projects/Survive/src/app.html"],"names":[],"mappings":"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AE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBACjG,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE;gBAC/F,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;gBAC9F,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;gBAC/F,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;gBAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;gBAC7F,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE;gBAChG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC;gBAC3F,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;gBAC5F,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;gBAC7F,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG;gBAC3F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAEhG,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;YAE5B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC;QAED,qBAAI,GAAJ,UAAK,CAAC,EAAE,CAAC;YACL,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC;QAAA,CAAC;QAEF,qBAAI,GAAJ,UAAK,CAAC,EAAE,CAAC,EAAE,CAAC;YACR,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAChD,CAAC;QAAA,CAAC;QAOF,qBAAI,GAAJ,UAAK,IAAI;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAChC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;gBAEvB,IAAI,IAAI,KAAK,CAAC;YAClB,CAAC;YAED,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;gBACb,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC;YACtB,CAAC;YAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3B,IAAI,CAAC,SAAA,CAAC;gBACN,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACR,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;gBACxC,CAAC;gBAED,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;gBACtC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YAC7D,CAAC;QACL,CAAC;QAAA,CAAC;QAGF,yBAAQ,GAAR,UAAS,GAAG,EAAE,GAAG;YACb,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAEhC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAEf,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;YACzB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACrB,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAGrB,IAAI,EAAE,EAAE,EAAE,CAAC;YACX,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBACV,EAAE,GAAG,CAAC,CAAC;gBAAC,EAAE,GAAG,CAAC,CAAC;YACnB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,GAAG,CAAC,CAAC;gBAAC,EAAE,GAAG,CAAC,CAAC;YACnB,CAAC;YAID,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACtB,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACtB,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACzB,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YAEzB,CAAC,IAAI,GAAG,CAAC;YACT,CAAC,IAAI,GAAG,CAAC;YACT,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACjD,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAE/C,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACjC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACT,EAAE,GAAG,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,IAAI,EAAE,CAAC;gBACT,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACpC,CAAC;YACD,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACjC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACT,EAAE,GAAG,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,IAAI,EAAE,CAAC;gBACT,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACpC,CAAC;YACD,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACjC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACT,EAAE,GAAG,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,IAAI,EAAE,CAAC;gBACT,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACpC,CAAC;YAGD,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC/B,CAAC;QAAA,CAAC;QAGF,yBAAQ,GAAR,UAAS,GAAG,EAAE,GAAG,EAAE,GAAG;YAClB,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YACf,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;YAEf,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAGnB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAE5B,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACzB,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAIrB,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACf,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACf,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;gBACX,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;gBAAC,CAAC;gBACjE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;gBAAC,CAAC;gBACtE,IAAI,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;gBAAC,CAAC;YAC5D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;gBAAC,CAAC;gBAChE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;gBAAC,CAAC;gBACrE,IAAI,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;oBAAC,EAAE,GAAG,CAAC,CAAC;gBAAC,CAAC;YAC5D,CAAC;YAKD,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACtB,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACtB,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAEtB,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAC1B,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAC1B,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YAE1B,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACzB,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACzB,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YAGzB,CAAC,IAAI,GAAG,CAAC;YACT,CAAC,IAAI,GAAG,CAAC;YACT,CAAC,IAAI,GAAG,CAAC;YACT,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACrE,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACrE,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAGlE,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAC3C,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACT,EAAE,GAAG,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,IAAI,EAAE,CAAC;gBACT,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACxC,CAAC;YACD,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAC3C,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACT,EAAE,GAAG,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,IAAI,EAAE,CAAC;gBACT,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACxC,CAAC;YACD,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAC3C,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACT,EAAE,GAAG,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,IAAI,EAAE,CAAC;gBACT,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACxC,CAAC;YACD,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAC3C,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;gBACT,EAAE,GAAG,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,IAAI,EAAE,CAAC;gBACT,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACxC,CAAC;YAGD,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAEpC,CAAC;QAAA,CAAC;QAIF,qBAAI,GAAJ,UAAK,CAAC;YACF,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;QAC/C,CAAC;QAED,qBAAI,GAAJ,UAAK,CAAC,EAAE,CAAC,EAAE,CAAC;YACR,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC;QAGD,wBAAO,GAAP,UAAQ,CAAC,EAAE,CAAC;YAER,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEzC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAErB,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;YAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;YAGzB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1D,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1D,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YAGlE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAGrB,MAAM,CAAC,IAAI,CAAC,IAAI,CACZ,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EACtB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EACtB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC;QAAA,CAAC;QAGF,wBAAO,GAAP,UAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;YAEX,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAE5D,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEhC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;YAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;YAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;YAGtC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrE,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7E,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7E,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YACrF,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7E,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YACrF,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YACrF,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;Y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","file":"app-bundle.js","sourcesContent":["interface Enum {\r\n    [id: number]: string\r\n}\r\n\r\nexport function GenerateHashCode (phrase: string): number {\r\n  let hash: number = 0;\r\n  let i: number;\r\n  let chr: number; \r\n\r\n  if (phrase.length === 0) return hash;\r\n  for (i = 0; i < phrase.length; i++) {\r\n    chr = phrase.charCodeAt(i);\r\n    hash = ((hash << 5) - hash) + chr;\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n  return hash;\r\n};\r\n\r\nexport function GetEnumElements(e: Enum): Array<string> {\r\n    return Object.keys(e).map(a => e[a]).filter(a => typeof a === 'string');\r\n}\r\n\r\nexport class Guid {\r\n    static newGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}\r\n\r\nexport class Vector2 {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x?:number, y?:number) {\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n    }\r\n\r\n    dot2(x, y) {\r\n        return this.x * x + this.y * y;\r\n    };\r\n\r\n    \r\n\r\n}\r\n\r\nexport class Vector3 {\r\n    public x: number;\r\n    public y: number;\r\n    public z: number;\r\n\r\n    constructor(x?:number, y?:number, z?:number) {\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n        this.z = z || 0;\r\n    }\r\n\r\n    dot2(x, y) {\r\n        return this.x * x + this.y * y;\r\n    };\r\n\r\n    dot3(x, y, z) {\r\n        return this.x * x + this.y * y + this.z * z;\r\n    }\r\n}\r\n\r\nexport class Random {\r\n    private seed: number;\r\n\r\n    constructor(seed: number) {\r\n        this.seed = seed;\r\n    }\r\n\r\n    private next(min: number, max: number): number {\r\n        max = max || 0;\r\n        min = min || 0;\r\n\r\n        this.seed = (this.seed * 9301 + 49297) % 233280;\r\n        let rnd = this.seed / 233280;\r\n\r\n        return min + rnd * (max - min);\r\n    }\r\n\r\n    // http://indiegamr.com/generate-repeatable-random-numbers-in-js/\r\n    public nextInt(min: number, max: number): number {\r\n        return Math.round(this.next(min, max));\r\n    }\r\n\r\n    public nextDouble(): number {\r\n        return this.next(0, 1);\r\n    }\r\n\r\n    public pick(collection: any[]): any {\r\n        return collection[this.nextInt(0, collection.length - 1)];\r\n    }\r\n}\r\n\r\nexport class Perlin {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    seedValue: number;\r\n    p: Array<number>;\r\n\r\n    grad3: Array<Vector3>;\r\n    perm: Array<number>;\r\n    gradP: Array<Vector3>;\r\n\r\n    constructor() {\r\n        this.grad3 = [new Vector3(1, 1, 0), new Vector3(-1, 1, 0), new Vector3(1, -1, 0), new Vector3(-1, -1, 0),\r\n        new Vector3(1, 0, 1), new Vector3(-1, 0, 1), new Vector3(1, 0, -1), new Vector3(-1, 0, -1),\r\n        new Vector3(0, 1, 1), new Vector3(0, -1, 1), new Vector3(0, 1, -1), new Vector3(0, -1, -1)];\r\n\r\n        this.p = [151, 160, 137, 91, 90, 15,\r\n            131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\r\n            190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\r\n            88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\r\n            77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\r\n            102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\r\n            135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\r\n            5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\r\n            223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\r\n            129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\r\n            251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\r\n            49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\r\n            138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\r\n\r\n        this.perm = new Array(512);\r\n        this.gradP = new Array(512);\r\n\r\n        this.seed(0);\r\n    }\r\n\r\n    dot2(x, y) {\r\n        return this.x * x + this.y * y;\r\n    };\r\n\r\n    dot3(x, y, z) {\r\n        return this.x * x + this.y * y + this.z * z;\r\n    };\r\n\r\n    // To remove the need for index wrapping, double the permutation table length\r\n\r\n\r\n    // This isn't a very good seeding function, but it works ok. It supports 2^16\r\n    // different seed values. Write something better if you need more seeds.\r\n    seed(seed) {\r\n        this.seedValue = Math.abs(seed);\r\n        if (seed > 0 && seed < 1) {\r\n            // Scale the seed out\r\n            seed *= 65536;\r\n        }\r\n\r\n        seed = Math.floor(seed);\r\n        if (seed < 256) {\r\n            seed |= seed << 8;\r\n        }\r\n\r\n        for (let i = 0; i < 256; i++) {\r\n            let v;\r\n            if (i & 1) {\r\n                v = this.p[i] ^ (seed & 255);\r\n            } else {\r\n                v = this.p[i] ^ ((seed >> 8) & 255);\r\n            }\r\n\r\n            this.perm[i] = this.perm[i + 256] = v;\r\n            this.gradP[i] = this.gradP[i + 256] = this.grad3[v % 12];\r\n        }\r\n    };\r\n\r\n    // 2D simplex noise\r\n    simplex2(xin, yin) {\r\n        let F2 = 0.5 * (Math.sqrt(3) - 1);\r\n        let G2 = (3 - Math.sqrt(3)) / 6;\r\n\r\n        let n0, n1, n2; // Noise contributions from the three corners\r\n        // Skew the input space to determine which simplex cell we're in\r\n        let s = (xin + yin) * F2; // Hairy factor for 2D\r\n        let i = Math.floor(xin + s);\r\n        let j = Math.floor(yin + s);\r\n        let t = (i + j) * G2;\r\n        let x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\r\n        let y0 = yin - j + t;\r\n        // For the 2D case, the simplex shape is an equilateral triangle.\r\n        // Determine which simplex we are in.\r\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\r\n        if (x0 > y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\r\n            i1 = 1; j1 = 0;\r\n        } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\r\n            i1 = 0; j1 = 1;\r\n        }\r\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\r\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\r\n        // c = (3-sqrt(3))/6\r\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\r\n        let y1 = y0 - j1 + G2;\r\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\r\n        let y2 = y0 - 1 + 2 * G2;\r\n        // Work out the hashed gradient indices of the three simplex corners\r\n        i &= 255;\r\n        j &= 255;\r\n        let gi0 = this.gradP[i + this.perm[j]];\r\n        let gi1 = this.gradP[i + i1 + this.perm[j + j1]];\r\n        let gi2 = this.gradP[i + 1 + this.perm[j + 1]];\r\n        // Calculate the contribution from the three corners\r\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\r\n        if (t0 < 0) {\r\n            n0 = 0;\r\n        } else {\r\n            t0 *= t0;\r\n            n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\r\n        }\r\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\r\n        if (t1 < 0) {\r\n            n1 = 0;\r\n        } else {\r\n            t1 *= t1;\r\n            n1 = t1 * t1 * gi1.dot2(x1, y1);\r\n        }\r\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\r\n        if (t2 < 0) {\r\n            n2 = 0;\r\n        } else {\r\n            t2 *= t2;\r\n            n2 = t2 * t2 * gi2.dot2(x2, y2);\r\n        }\r\n        // Add contributions from each corner to get the final noise value.\r\n        // The result is scaled to return values in the interval [-1,1].\r\n        return 70 * (n0 + n1 + n2);\r\n    };\r\n\r\n    // 3D simplex noise\r\n    simplex3(xin, yin, zin) {\r\n        let F3 = 1 / 3;\r\n        let G3 = 1 / 6;\r\n\r\n        let n0, n1, n2, n3; // Noise contributions from the four corners\r\n\r\n        // Skew the input space to determine which simplex cell we're in\r\n        let s = (xin + yin + zin) * F3; // Hairy factor for 2D\r\n        let i = Math.floor(xin + s);\r\n        let j = Math.floor(yin + s);\r\n        let k = Math.floor(zin + s);\r\n\r\n        let t = (i + j + k) * G3;\r\n        let x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\r\n        let y0 = yin - j + t;\r\n        let z0 = zin - k + t;\r\n\r\n        // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\r\n        // Determine which simplex we are in.\r\n        let i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\r\n        let i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\r\n        if (x0 >= y0) {\r\n            if (y0 >= z0) { i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 1; k2 = 0; }\r\n            else if (x0 >= z0) { i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 0; k2 = 1; }\r\n            else { i1 = 0; j1 = 0; k1 = 1; i2 = 1; j2 = 0; k2 = 1; }\r\n        } else {\r\n            if (y0 < z0) { i1 = 0; j1 = 0; k1 = 1; i2 = 0; j2 = 1; k2 = 1; }\r\n            else if (x0 < z0) { i1 = 0; j1 = 1; k1 = 0; i2 = 0; j2 = 1; k2 = 1; }\r\n            else { i1 = 0; j1 = 1; k1 = 0; i2 = 1; j2 = 1; k2 = 0; }\r\n        }\r\n        // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\r\n        // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\r\n        // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\r\n        // c = 1/6.\r\n        let x1 = x0 - i1 + G3; // Offsets for second corner\r\n        let y1 = y0 - j1 + G3;\r\n        let z1 = z0 - k1 + G3;\r\n\r\n        let x2 = x0 - i2 + 2 * G3; // Offsets for third corner\r\n        let y2 = y0 - j2 + 2 * G3;\r\n        let z2 = z0 - k2 + 2 * G3;\r\n\r\n        let x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\r\n        let y3 = y0 - 1 + 3 * G3;\r\n        let z3 = z0 - 1 + 3 * G3;\r\n\r\n        // Work out the hashed gradient indices of the four simplex corners\r\n        i &= 255;\r\n        j &= 255;\r\n        k &= 255;\r\n        let gi0 = this.gradP[i + this.perm[j + this.perm[k]]];\r\n        let gi1 = this.gradP[i + i1 + this.perm[j + j1 + this.perm[k + k1]]];\r\n        let gi2 = this.gradP[i + i2 + this.perm[j + j2 + this.perm[k + k2]]];\r\n        let gi3 = this.gradP[i + 1 + this.perm[j + 1 + this.perm[k + 1]]];\r\n\r\n        // Calculate the contribution from the four corners\r\n        let t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\r\n        if (t0 < 0) {\r\n            n0 = 0;\r\n        } else {\r\n            t0 *= t0;\r\n            n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient\r\n        }\r\n        let t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\r\n        if (t1 < 0) {\r\n            n1 = 0;\r\n        } else {\r\n            t1 *= t1;\r\n            n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\r\n        }\r\n        let t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\r\n        if (t2 < 0) {\r\n            n2 = 0;\r\n        } else {\r\n            t2 *= t2;\r\n            n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\r\n        }\r\n        let t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\r\n        if (t3 < 0) {\r\n            n3 = 0;\r\n        } else {\r\n            t3 *= t3;\r\n            n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\r\n        }\r\n        // Add contributions from each corner to get the final noise value.\r\n        // The result is scaled to return values in the interval [-1,1].\r\n        return 32 * (n0 + n1 + n2 + n3);\r\n\r\n    };\r\n\r\n    // ##### Perlin noise stuff\r\n\r\n    fade(t) {\r\n        return t * t * t * (t * (t * 6 - 15) + 10);\r\n    }\r\n\r\n    lerp(a, b, t) {\r\n        return (1 - t) * a + t * b;\r\n    }\r\n\r\n    // 2D Perlin Noise\r\n    perlin2(x, y) {\r\n        // Find unit grid cell containing point\r\n        let X = Math.floor(x), Y = Math.floor(y);\r\n        // Get relative xy coordinates of point within that cell\r\n        x = x - X; y = y - Y;\r\n        // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n        X = X & 255; Y = Y & 255;\r\n\r\n        // Calculate noise contributions from each of the four corners\r\n        let n00 = this.gradP[X + this.perm[Y]].dot2(x, y);\r\n        let n01 = this.gradP[X + this.perm[Y + 1]].dot2(x, y - 1);\r\n        let n10 = this.gradP[X + 1 + this.perm[Y]].dot2(x - 1, y);\r\n        let n11 = this.gradP[X + 1 + this.perm[Y + 1]].dot2(x - 1, y - 1);\r\n\r\n        // Compute the fade curve value for x\r\n        let u = this.fade(x);\r\n\r\n        // Interpolate the four results\r\n        return this.lerp(\r\n            this.lerp(n00, n10, u),\r\n            this.lerp(n01, n11, u),\r\n            this.fade(y));\r\n    };\r\n\r\n    // 3D Perlin Noise\r\n    perlin3(x, y, z) {\r\n        // Find unit grid cell containing point\r\n        let X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\r\n        // Get relative xyz coordinates of point within that cell\r\n        x = x - X; y = y - Y; z = z - Z;\r\n        // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n        X = X & 255; Y = Y & 255; Z = Z & 255;\r\n\r\n        // Calculate noise contributions from each of the eight corners\r\n        let n000 = this.gradP[X + this.perm[Y + this.perm[Z]]].dot3(x, y, z);\r\n        let n001 = this.gradP[X + this.perm[Y + this.perm[Z + 1]]].dot3(x, y, z - 1);\r\n        let n010 = this.gradP[X + this.perm[Y + 1 + this.perm[Z]]].dot3(x, y - 1, z);\r\n        let n011 = this.gradP[X + this.perm[Y + 1 + this.perm[Z + 1]]].dot3(x, y - 1, z - 1);\r\n        let n100 = this.gradP[X + 1 + this.perm[Y + this.perm[Z]]].dot3(x - 1, y, z);\r\n        let n101 = this.gradP[X + 1 + this.perm[Y + this.perm[Z + 1]]].dot3(x - 1, y, z - 1);\r\n        let n110 = this.gradP[X + 1 + this.perm[Y + 1 + this.perm[Z]]].dot3(x - 1, y - 1, z);\r\n        let n111 = this.gradP[X + 1 + this.perm[Y + 1 + this.perm[Z + 1]]].dot3(x - 1, y - 1, z - 1);\r\n\r\n        // Compute the fade curve value for x, y, z\r\n        let u = this.fade(x);\r\n        let v = this.fade(y);\r\n        let w = this.fade(z);\r\n\r\n        // Interpolate\r\n        return this.lerp(\r\n            this.lerp(\r\n                this.lerp(n000, n100, u),\r\n                this.lerp(n001, n101, u), w),\r\n            this.lerp(\r\n                this.lerp(n010, n110, u),\r\n                this.lerp(n011, n111, u), w),\r\n            v);\r\n    };\r\n\r\n}\r\nexport class Bounds {\r\n    public topLeft: Vector2;\r\n    public bottomRight: Vector2;\r\n    \r\n    constructor(topLeft: Vector2, bottomRight: Vector2) {\r\n        this.topLeft = topLeft;\r\n        this.bottomRight = bottomRight;\r\n    }\r\n\r\n    isInsideBounds(bounds: Bounds) {\r\n        return (this.topLeft.x  >= bounds.topLeft.x && this.bottomRight.x <= bounds.bottomRight.x\r\n                && this.topLeft.y >= bounds.topLeft.y && this.bottomRight.y <= bounds.bottomRight.y);\r\n    }\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Item} from '../item/item';\r\nimport {Guid} from '../helpers';\r\n\r\nexport class Inventory {\r\n\r\n    private _items:Array<Item> = [];\r\n    public get items():Array<Item> {\r\n        return this._items;\r\n    }\r\n    public set items(value:Array<Item>) {\r\n        this._items = value;\r\n    }\r\n\r\n    private _volumeCap:number = null;\r\n    public get volumeCap():number {\r\n        return this._volumeCap;\r\n    }\r\n    public set volumeCap(value:number) {\r\n        this._volumeCap = value;\r\n    }\r\n\r\n    private _weightCap:number = null;\r\n    public get weightCap():number {\r\n        return this._weightCap;\r\n    }\r\n    public set weightCap(value:number) {\r\n        this._weightCap = value;\r\n    }\r\n\r\n    currentVolume:number = 0;\r\n    currentWeight:number = 0;\r\n\r\n    constructor() {\r\n        this.weightCap = 60;\r\n        this.volumeCap = 15;\r\n    }\r\n    \r\n    getItemById(id:string):Item {\r\n        return this.items.find(item => item.id === id);\r\n    }\r\n\r\n    addItem(item: Item) {\r\n        this.currentVolume += item.stats.volume;\r\n        this.currentWeight += item.stats.weight;\r\n        //let mod = require('./item-modules/' + item.module);\r\n        let i = Object.assign(new Item(), item);\r\n        i.id = Guid.newGuid();\r\n        this.items.push(i);\r\n        //update volumeCurrent\r\n        //update weightCurrent\r\n        //run any 'equip' script associated with item\r\n    }\r\n\r\n    removeItem(item:Item) {\r\n        this.currentVolume -= item.stats.volume;\r\n        this.currentWeight -= item.stats.weight;\r\n\r\n        this.items = this.items.filter(i => i.id !== item.id);\r\n\r\n        //update volumeCurrent\r\n        //update weightCurrent\r\n        //run any 'remove' script associated with item\r\n    }\r\n\r\n}","export class Health {\r\n    parts:Array<any>;\r\n    head: number = 100;\r\n    torso: number = 100;\r\n    leftArm: number = 100;\r\n    rightArm: number = 100;\r\n    leftHand: number = 100;\r\n    rightHand: number = 100;\r\n    leftLeg: number = 100;\r\n    rightLeg: number = 100;\r\n    leftFoot: number = 100;\r\n    rightFoot: number = 100;\r\n\r\n    constructor() {\r\n        this.parts = [\r\n            {id: 'head', description: 'Head', value: 100},\r\n            {id: 'torso', description: 'Torso', value: 100},\r\n            {id: 'leftArm', description: 'Left Arm', value: 100},\r\n            {id: 'rightArm', description: 'Right Arm', value: 100},\r\n            {id: 'leftHand', description: 'Left Hand', value: 100},\r\n            {id: 'rightHand', description: 'Right Hand', value: 100},\r\n            {id: 'leftLeg', description: 'Left Leg', value: 100},\r\n            {id: 'rightLeg', description: 'Right Leg', value: 100},\r\n            {id: 'leftFoot', description: 'Left Foot', value: 100},\r\n            {id: 'rightFoot', description: 'Right Foot', value: 100},\r\n\r\n        ]\r\n    }\r\n\r\n    damage(partId:string, value:number) {\r\n        //find part\r\n        let part = this.parts.find(p => p.id === partId);\r\n\r\n        part.value -= value;\r\n        //apply value (create rules as well)\r\n    }\r\n\r\n    heal(partId:string, value:number) {\r\n        //find part\r\n        let part = this.parts.find(p => p.id === partId);\r\n\r\n        part.value += value;\r\n        //apply value (create rules as well)\r\n    }\r\n}","import { Vector2 } from '../helpers';\r\nimport { Inventory } from '../inventory/inventory';\r\n\r\nexport class Tile {\r\n    public inventory: Inventory;\r\n    public title: string;\r\n    public movementCost: number;\r\n    public symbol: string;\r\n    public color: string;\r\n    public chunkPosition: Vector2;\r\n    public worldPosition: Vector2;\r\n    public chunkIndex: Vector2;\r\n    public isPlayer: boolean;\r\n    public tileWeight: number;\r\n\r\n    constructor(chunkPosition: Vector2, worldPosition: Vector2, tileWeight: number, chunkIndex: Vector2) {\r\n        this.worldPosition = worldPosition;\r\n        this.chunkPosition = chunkPosition;\r\n        this.inventory = new Inventory();\r\n        this.isPlayer = false;\r\n        this.tileWeight = tileWeight;\r\n        this.chunkIndex = chunkIndex;\r\n    }\r\n}","const WATER_MAX = 0.1;\r\nlet tileData = {\r\n    weightMod: 20, //modifier to perlin noise result\r\n    weightRange: 20 * 3, //used to modify normalized weight ranges for tiles to correspond to the modified perline noise result\r\n    tiles: [\r\n        {\r\n            id: \"grass\",\r\n            color: \"#66CD00\",\r\n            symbol: 183,\r\n            movementCost: 50,\r\n            weight: { min: WATER_MAX, max: null },\r\n            distanceBuffer: 1000,\r\n            random: false,\r\n            randomPercent: 0,\r\n            layer: 0,\r\n        },\r\n        {\r\n            id: \"tree\",\r\n            weight: { min: WATER_MAX + .003, max: 0.47 },\r\n            random: true,\r\n            randomPercent: 0.44,\r\n            symbol: 165,\r\n            color: '#228B22',\r\n            movementCost: -1,\r\n            layer: 1\r\n        },\r\n\r\n        {\r\n            id: \"stone\",\r\n            weight: { min: 0.40, max: 0.64 },\r\n            random: true,\r\n            randomPercent: 0.01,\r\n            symbol: 186,\r\n            color: '#b8c0c8',\r\n            movementCost: -1,\r\n            layer: 1.1\r\n        },\r\n\r\n        {\r\n            id: \"water\",\r\n            weight: { min: null, max: WATER_MAX },\r\n            random: false,\r\n            randomPercent: 0,\r\n            symbol: 126,\r\n            color: '#1E90FF',\r\n            movementCost: -1,\r\n            layer: 1000\r\n        }\r\n    ]\r\n};\r\n\r\nexport default tileData;","import { Container } from 'aurelia-framework';\r\nimport { Tile } from '../tile/tile';\r\nimport { Random, Perlin, Vector2, Bounds } from '../helpers';\r\nimport tileData from '../tile/data/tiles';\r\nconst TileData = tileData;\r\n\r\nexport class Chunk {\r\n    public tiles: Tile[][];\r\n    public seed: number;\r\n    public worldPosition: Vector2;\r\n    public chunkSize: Vector2;\r\n    public position: Vector2 = null;\r\n\r\n    private perlin: Perlin;\r\n\r\n    constructor(chunkSize: Vector2, position: Vector2 = new Vector2(), worldPosition?: Vector2) {\r\n        this.chunkSize = chunkSize;\r\n        this.perlin = Container.instance.get(Perlin) as Perlin;\r\n        this.tiles = [];\r\n        this.position = position;\r\n        this.worldPosition = worldPosition ? worldPosition : new Vector2((this.position.x * this.chunkSize.x), (position.y * this.chunkSize.y));\r\n\r\n        this.seedChunk();\r\n    }\r\n\r\n    seedChunk() {\r\n        let weightMap = this.generateWeightMap();\r\n        let distanceBuffers = [];\r\n\r\n        for (let y = 0; y < this.chunkSize.y; y++) {\r\n            this.tiles[y] = [];\r\n            for (let x = 0; x < this.chunkSize.x; x++) {\r\n                let worldPosition = new Vector2(x + this.worldPosition.x, y + this.worldPosition.y);\r\n                let chunkIndex = new Vector2(x, y);\r\n                let tile = this.generateTile(worldPosition, this.position, weightMap, chunkIndex);\r\n\r\n                this.tiles[y][x] = tile;\r\n            }\r\n        }\r\n    }\r\n    getWorldPositionBounds() {\r\n        let l = this.tiles[0][0].worldPosition;\r\n        let r = this.tiles[this.tiles.length - 1][this.chunkSize.x - 1].worldPosition;\r\n        return new Bounds(l, r);\r\n    }\r\n\r\n    getTileSubset(bounds: Bounds): Tile[][] {\r\n        let chunkBounds = this.getWorldPositionBounds();\r\n\r\n        if (bounds.topLeft.y < chunkBounds.topLeft.y)\r\n            bounds.topLeft.y = chunkBounds.topLeft.y;\r\n        if (bounds.topLeft.x < chunkBounds.topLeft.x)\r\n            bounds.topLeft.x = chunkBounds.topLeft.x;\r\n\r\n        if (bounds.bottomRight.y > chunkBounds.bottomRight.y)\r\n            bounds.bottomRight.y = chunkBounds.bottomRight.y\r\n        if (bounds.bottomRight.x > chunkBounds.bottomRight.x)\r\n            bounds.bottomRight.x = chunkBounds.bottomRight.x\r\n        \r\n        let allInsideBounds = chunkBounds.isInsideBounds(bounds);\r\n\r\n        if(allInsideBounds)\r\n            return this.tiles;\r\n\r\n        let startTile = this.getTileByWorldPosition(bounds.topLeft);\r\n        let endTile = this.getTileByWorldPosition(bounds.bottomRight);\r\n        \r\n        let tiles: Tile[][] = [];\r\n        for(let y = startTile.chunkIndex.y; y <= endTile.chunkIndex.y; y++) {\r\n            let yPos = y - startTile.chunkIndex.y;\r\n            tiles[yPos] = [];\r\n            for(let x = startTile.chunkIndex.x; x <= endTile.chunkIndex.x; x++) {\r\n                let xPos = x - startTile.chunkIndex.x;\r\n                tiles[yPos][xPos] = this.tiles[y][x];\r\n            }\r\n        }\r\n\r\n        return tiles;\r\n    }\r\n\r\n    generateWeightMap() {\r\n        let weightMap = [];\r\n\r\n        TileData.tiles.forEach(tile => {\r\n            //We are modifying the weight of the tile to correspond with the weightMod being applied to the perlin noise result.\r\n            let min: number = tile.weight.min == null ? null : (tile.weight.min * tileData.weightRange) - tileData.weightMod;\r\n            let max: number = tile.weight.max == null ? null : (tile.weight.max * tileData.weightRange) - tileData.weightMod;\r\n            weightMap.push({\r\n                id: tile.id,\r\n                random: tile.random,\r\n                randomPercent: tile.randomPercent,\r\n                layer: tile.layer,\r\n                //distanceBuffer: tile.,\r\n                weight: {\r\n                    min: min,\r\n                    max: max\r\n                }\r\n            });\r\n        });\r\n\r\n        return weightMap.sort((a, b) => {\r\n            if (a.layer > b.layer) {\r\n                return -1;\r\n            } else if (a.layer < b.layer) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    getTileByWorldPosition(position: Vector2, chunkSize?: Vector2) {\r\n        let size = chunkSize || this.chunkSize;\r\n        let targetTileX = Math.floor(position.x % (size.x * this.position.x));\r\n        let targetTileY = Math.floor(position.y % (size.y * this.position.y));\r\n\r\n        let targetTile = this.tiles[targetTileY][targetTileX];\r\n\r\n        return targetTile;\r\n    }\r\n\r\n    generateTile(worldPosition: Vector2, chunkPosition: Vector2, weightMap: any[], chunkIndex: Vector2): Tile {\r\n        let perlinDivisor = 40;\r\n\r\n        let tileWeight = Math.ceil(this.perlin.simplex2(worldPosition.x / perlinDivisor, worldPosition.y / perlinDivisor) * TileData.weightMod);\r\n        let tileType = null;\r\n\r\n        let maxLayer = 1000;\r\n        let currentLayer = maxLayer;\r\n        //TODO: This could be optimized\r\n        let tileData;\r\n        tileData = weightMap.find(tile => {\r\n            //tileweight falls in tile weight range\r\n            if (((tile.weight.max >= tileWeight) || tile.weight.max == null)\r\n                && ((tile.weight.min <= tileWeight) || tile.weight.min == null)) {\r\n                //is this tile randomized to show?\r\n                if (tile.randomPercent != null && tile.randomPercent != 0) {\r\n                    let show = true;\r\n                    let rnd = new Random((this.perlin.seedValue * parseInt('' + worldPosition.x + worldPosition.y)) + tileWeight * 10000000);\r\n                    let num = rnd.nextInt(1, 100);\r\n                    show = num <= tile.randomPercent * 100;\r\n                    //If we are not going to randomly show the tile then\r\n                    //We need to go down to the NEXT layer, and not the next decrement of the same layer \r\n                    //(e.g. layer 2.1 is not showing, we need to go to Layer 0.* and not Layer 1.0)\r\n\r\n                    return show;\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        tileType = TileData.tiles.find(tile => tile.id == tileData.id);\r\n\r\n        let tile: Tile = new Tile(chunkPosition, new Vector2(worldPosition.x, worldPosition.y), tileWeight, chunkIndex);\r\n\r\n        tile.movementCost = tileType.movementCost;\r\n        tile.title = tileType.title;\r\n\r\n        if (!tile.color)\r\n            tile.color = tileType.color;\r\n\r\n        if (!tile.symbol)\r\n            tile.symbol = String.fromCharCode(tileType.symbol);\r\n\r\n        return tile;\r\n    }\r\n\r\n\r\n}\r\n","import { inject, Container } from 'aurelia-framework';\r\nimport { Chunk } from './chunk';\r\nimport { Tile } from '../tile/tile';\r\n\r\nimport { Perlin, Random, Vector2, Bounds } from '../helpers';\r\n\r\nexport class World {\r\n    public chunks: Chunk[][];\r\n    public activeChunks: Chunk[][]; //the chunks including and surrounding the camera viewport\r\n    public activeTiles: Tile[][];\r\n    public activeChunkSize: number; //the amount of active chunks in a given direction\r\n    public worldSize: Vector2;\r\n    public chunkSize: Vector2;\r\n    public seed: number;\r\n    public viewPortAspectRatio: number;\r\n    public viewportScale: number;\r\n    private perlin: Perlin;\r\n    playerTile: Tile;\r\n\r\n\r\n    constructor() {\r\n        this.viewportScale = 7;\r\n        this.viewPortAspectRatio = 2.02;\r\n        this.perlin = Container.instance.get(Perlin) as Perlin;\r\n        this.worldSize = new Vector2(2, 1);\r\n        this.chunkSize = new Vector2(100, 100);//new Vector2(this.viewportScale * (Math.floor(9 * this.viewPortAspectRatio)), Math.floor(this.viewportScale * 9)); //TODO: put this in a setting so other modules can access it\r\n        this.chunks = [];\r\n        this.seed = new Random(Math.floor(Math.random() * 32000)).nextDouble();\r\n        this.playerTile = null;\r\n    }\r\n\r\n    generateSeed(seed: number = null) {\r\n        this.perlin.seed(seed == null ? this.seed : seed);\r\n    }\r\n\r\n    generateActiveChunks(startPos: Vector2) {\r\n        let minY = startPos.y - this.activeChunkSize;\r\n        let maxY = startPos.y + this.activeChunkSize;\r\n        let minX = startPos.x - this.activeChunkSize;\r\n        let maxX = startPos.x + this.activeChunkSize;\r\n        let activeChunks: Chunk[][] = [];\r\n        let activeTiles: Tile[][] = [];\r\n        for(let y = 0; y <= maxY - startPos.y; y++) {\r\n            activeChunks[y] = [];\r\n            for(let x = 0; x <= maxX - startPos.x; x++) {\r\n                let position: Vector2 = new Vector2(minX + x, minY + y);\r\n                let chunk = this.chunks[position.y][position.x];\r\n                \r\n                if(chunk == null) \r\n                    chunk = this.chunks[position.y][position.x] = new Chunk(this.chunkSize, position);\r\n                \r\n                activeChunks[y][x] = chunk; \r\n                activeTiles = activeTiles.concat(chunk.tiles);\r\n            }\r\n        }\r\n\r\n        this.activeChunks = activeChunks;\r\n        this.activeTiles = activeTiles;\r\n    }   \r\n\r\n    getActiveChunkBounds(viewportSize: number): Bounds {\r\n\r\n        let topLeft = this.activeChunks[0][0]\r\n                            .getWorldPositionBounds()\r\n                            .topLeft;\r\n        let bottomRight = this.activeChunks[this.activeChunks.length - 1][this.activeChunkSize - 1]\r\n                            .getWorldPositionBounds()\r\n                            .bottomRight;\r\n\r\n        \r\n        return new Bounds(topLeft, bottomRight);\r\n    }\r\n\r\n    getChunkPositionFromWorldPosition(position: Vector2): Vector2 {\r\n        let chunk = new Vector2();\r\n\r\n        chunk.x = Math.floor(position.x / this.chunkSize.x);\r\n        chunk.y = Math.floor(position.y / this.chunkSize.y);\r\n\r\n        return chunk;\r\n    }\r\n\r\n    getTileByWorldPosition(position: Vector2, chunkSize?: Vector2) {\r\n        let chunkPos = this.getChunkPositionFromWorldPosition(position);\r\n        let chunk = this.chunks[chunkPos.y][chunkPos.x];\r\n\r\n        let size = chunkSize || this.chunkSize;\r\n        let targetTileX = Math.floor(position.x % size.x);\r\n        let targetTileY = Math.floor(position.y % size.y);\r\n\r\n        let targetTile = chunk.tiles[targetTileY][targetTileX];\r\n\r\n        return targetTile;\r\n    }\r\n\r\n    getChunk(position: Vector2): Chunk {\r\n        let chunk: Chunk = null;\r\n\r\n        if (this.chunks[position.y] && this.chunks[position.y][position.x]) {\r\n            chunk = this.chunks[position.y][position.x];\r\n        } else {\r\n\r\n            chunk = new Chunk(new Vector2(this.chunkSize.x, this.chunkSize.y), new Vector2(position.x, position.y));\r\n\r\n            if (!this.chunks[position.y])\r\n                this.chunks[position.y] = [];\r\n\r\n            this.chunks[position.y][position.x] = chunk;\r\n        }\r\n        return chunk;\r\n    }\r\n\r\n    getChunks(start: Vector2, end: Vector2): Chunk[][] {\r\n        let numChunksX = end.x - start.x;\r\n        let numChunksY = start.y - end.y;\r\n\r\n        let chunks: Chunk[][] = [];\r\n\r\n        for (let y = start.y; y <= end.y; y++) {\r\n            chunks[y] = [];\r\n            for (let x = start.x; x <= end.x; x++) {\r\n                if (this.chunks[y] && this.chunks[y][x]) {\r\n                    chunks[y][x] = this.chunks[y][x];\r\n                } else {\r\n                    chunks[y][x] = new Chunk(new Vector2(this.chunkSize.x, this.chunkSize.y), new Vector2(x, y));\r\n\r\n                    if (!this.chunks[y])\r\n                        this.chunks[y] = [];\r\n\r\n                    this.chunks[y][x] = chunks[y][x];\r\n                }\r\n            }\r\n        }\r\n        return chunks\r\n    }\r\n}","import { Container } from 'aurelia-framework';\r\nimport { World } from '../world/world';\r\nimport { Inventory } from '../inventory/inventory';\r\nimport { Health } from './health';\r\nimport { Vector2 } from '../helpers';\r\n\r\nexport class Actor {\r\n    public world: World;\r\n    public inventory: Inventory = null;\r\n    public health: Health;\r\n    public position: Vector2;\r\n    public symbol: string;\r\n    public color: string;\r\n\r\n    constructor() {\r\n        this.world = Container.instance.get(World);\r\n        this.inventory = new Inventory();\r\n        this.health = new Health();\r\n    }\r\n\r\n    \r\n\r\n   \r\n}","import {Container} from 'aurelia-framework';\r\nimport {Actor} from './actor';\r\n\r\nexport class Monster extends Actor {\r\n    constructor() {\r\n        super();\r\n        //this.enemy = Container.instance.get(Player) as Player;\r\n    }\r\n\r\n    attack() {\r\n        \r\n    }\r\n}","import {Vector2} from '../helpers';\r\n\r\nexport class PlayerMovedEvent {\r\n    position: Vector2;\r\n\r\n    constructor(position: Vector2) {\r\n        this.position = position;\r\n    }\r\n}","import { inject, Container } from 'aurelia-framework';\r\nimport { Inventory } from '../inventory/inventory';\r\nimport { Health } from './health';\r\nimport { Item } from '../item/item';\r\nimport { Monster } from './monster';\r\nimport { Vector2 } from '../helpers';\r\nimport { World } from '../world/world';\r\nimport { Actor } from './actor';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { PlayerMovedEvent } from '../events/player-moved-event';\r\n\r\nexport class Player extends Actor {\r\n    public enemy: Monster;\r\n    public world: World;\r\n    public collisionEnabled: boolean = false;\r\n    public eventAggregator: EventAggregator;\r\n\r\n    constructor() {\r\n        super();\r\n        this.enemy = null;\r\n        this.eventAggregator = Container.instance.get(EventAggregator);\r\n    }\r\n\r\n    pickUp(item: Item) {\r\n        this.inventory.addItem(item);\r\n\r\n    }\r\n\r\n    attack() {\r\n\r\n    }\r\n\r\n    equip(item: Item) {\r\n\r\n    }\r\n    toggleCollision() {\r\n        this.collisionEnabled = !this.collisionEnabled;\r\n    }\r\n    setPlayerPosition(value: Vector2) {\r\n        //this.camera.translate(value);\r\n        this.eventAggregator.publish('PlayerMoved', new PlayerMovedEvent(value))\r\n        this.position = value;\r\n    }\r\n\r\n    move(direction: string, distance: number) {\r\n\r\n        let destination = new Vector2();\r\n        let currentX = this.position.x;\r\n        let currentY = this.position.y;\r\n\r\n        switch (direction) {\r\n            case 'n':\r\n                destination.x = currentX;\r\n                destination.y = currentY - 1;\r\n                break;\r\n            case 's':\r\n                destination.x = currentX;\r\n                destination.y = currentY + 1;\r\n                break;\r\n            case 'e':\r\n                destination.x = currentX + 1;\r\n                destination.y = currentY;\r\n                break;\r\n            case 'w':\r\n                destination.x = currentX - 1;\r\n                destination.y = currentY;\r\n                break;\r\n            case 'nw':\r\n                destination.x = currentX - 1;\r\n                destination.y = currentY - 1;\r\n                break;\r\n            case 'sw':\r\n                destination.x = currentX - 1;\r\n                destination.y = currentY + 1;\r\n                break;\r\n            case 'se':\r\n                destination.x = currentX + 1;\r\n                destination.y = currentY + 1;\r\n                break;\r\n            case 'ne':\r\n                destination.x = currentX + 1;\r\n                destination.y = currentY - 1;\r\n                break;\r\n            default: break;\r\n        }\r\n\r\n        if (!this.collisionEnabled || this.world.getTileByWorldPosition(destination).movementCost > -1) {\r\n            this.setPlayerPosition(destination);\r\n        }\r\n    }\r\n}","import {inject, Container} from 'aurelia-framework';\r\nimport {Player} from '../actor/player';\r\n\r\nexport class ItemModule {\r\n    player:Player;\r\n    constructor() {\r\n        this.player = Container.instance.get(Player);\r\n    }\r\n\r\n    wield() {\r\n        //this.player.inventory.\r\n    }\r\n\r\n    use() {\r\n        return null;\r\n    }\r\n\r\n    attack() {\r\n\r\n    }\r\n}","export class ItemStats {\r\n    durability:number;\r\n    weight:number;\r\n    volume:number;\r\n    charges:number;\r\n    decay:number; //in hours\r\n}","export class WeaponStats {\r\n    range:number;\r\n    bash:number;\r\n    pierce:number;\r\n    slash:number;\r\n    ammoType:string;\r\n}","import { ItemModule } from './item-module';\r\nimport { Aurelia, inject } from 'aurelia-framework';\r\nimport { Container } from 'aurelia-dependency-injection';\r\nimport { Player } from '../actor/player';\r\nimport { ItemStats} from './stats/item-stats';\r\nimport { WeaponStats} from './stats/weapon-stats';\r\n\r\nexport class Item {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    category: string;\r\n    module: string;\r\n    stats:ItemStats;\r\n    weaponStats : WeaponStats;\r\n    container: Container;\r\n\r\n\r\n    constructor() {\r\n        //TODO need a mapper for this\r\n        this.container = Container.instance;\r\n        this.id = \"\";\r\n        this.title = \"\";\r\n        this.description = \"\";\r\n        this.category = \"\";\r\n        this.module = \"\";\r\n        this.stats = null;\r\n        this.weaponStats = null;\r\n    }\r\n\r\n    static mapItem(data) {\r\n        let item = new Item();\r\n        item.category = data.category;\r\n        item.description = data.description;\r\n        item.module = data.module;\r\n        item.title = data.title;\r\n        \r\n        return item;\r\n    }\r\n\r\n    static mapItemStats(data) {\r\n        let stats = new ItemStats();\r\n        stats.charges = data.charges;\r\n        stats.decay = data.decay;\r\n        stats.volume = data.volume;\r\n        stats.weight = data.weight;\r\n        stats.durability = data.durability;\r\n\r\n        return stats;\r\n    }\r\n\r\n    static mapWeaponStats(data) {\r\n        let stats = new WeaponStats();\r\n        stats.ammoType = data.ammoType;\r\n        stats.bash = data.bash;\r\n        stats.pierce = data.pierce;\r\n        stats.range = data.range;\r\n        stats.slash = data.slash;\r\n\r\n        return stats;\r\n    }\r\n\r\n    use() {\r\n        let mod = this.container.get(this.module) as ItemModule;\r\n        mod.use();\r\n\r\n        //handle if there are charges on this item or not\r\n        if (this.stats.charges !== -1) {\r\n            if (this.stats.charges > 0) {\r\n                if (this.stats.charges === 1) {\r\n                    let player = this.container.get(Player) as Player;\r\n                    player.inventory.removeItem(this);\r\n                }\r\n\r\n                this.stats.charges -= 1;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {Item} from \"../item\";\r\n\r\nlet items: any = [\r\n    {\r\n        \"title\": \"Bandage\",\r\n        \"description\": \"This is a description\",\r\n        \"category\": \"TOOL\",\r\n        \"module\": \"bandage\"\r\n    },\r\n    {\r\n        \"title\": \"Hunting Knife\",\r\n        \"description\": \"This is a description\",\r\n        \"category\": \"WEAPON\",\r\n        \"module\": \"hunting-knife\"\r\n    },\r\n    \r\n];\r\n\r\nexport default items;\r\n\r\n\r\n","let weaponStats: any = [\r\n    {\r\n        id: \"hunting-knife\",\r\n        range: 0,\r\n        bash: 0,\r\n        pierce: 6,\r\n        slash: 2,\r\n        ammoType: null\r\n    }\r\n\r\n];\r\n\r\nexport default weaponStats;","let itemStats = [\r\n    {\r\n        id: 'bandage',\r\n        charges: 1,\r\n        decay: -1,\r\n        volume: 0.5,\r\n        weight: 0.5,\r\n        durability: 100\r\n    },\r\n    {\r\n        id: 'hunting-knife',\r\n        charges: -1,\r\n        decay: -1,\r\n        volume: 0.5,\r\n        weight: 0.5,\r\n        durability: 100\r\n    }\r\n\r\n];\r\n\r\nexport default itemStats;","import {Item} from \"./item\";\r\nimport items from \"./data/items\";\r\nimport weaponStats from \"./data/weapon-stats\";\r\nimport itemStats from \"./data/item-stats\";\r\nimport {Guid} from '../helpers';\r\n\r\nexport class ItemContext {\r\n    items:Array<Item>;\r\n\r\n    constructor() {\r\n        this.items = [];\r\n        this.LoadItems();\r\n    }\r\n\r\n    LoadItems() {\r\n        items.forEach(data => {\r\n            let iStats = itemStats.find(s => s.id === data.module);\r\n            let wStats = weaponStats.find(s => s.id === data.module);\r\n            \r\n            let item = Item.mapItem(data);\r\n            \r\n            if(iStats) {\r\n                item.stats = Item.mapItemStats(iStats);\r\n            }\r\n\r\n            if(wStats) {\r\n                item.weaponStats = Item.mapWeaponStats(wStats);\r\n            }\r\n            \r\n            this.AddItem(item);\r\n        })\r\n    }\r\n\r\n    AddItem(item:Item) {\r\n        this.items.push(item);\r\n    }\r\n\r\n    \r\n\r\n    \r\n}","import { inject } from 'aurelia-framework';\r\nimport { Player } from '../actor/player';\r\n\r\n\r\n@inject(Player)\r\nexport class Input {\r\n    private player: Player;\r\n    private boundHandler;\r\n    private lastPressed = 0;\r\n    constructor(player) {\r\n        this.player = player;\r\n        this.boundHandler = this.handleKeyInput.bind(this);\r\n        window.addEventListener('keypress', this.boundHandler, false);\r\n    }\r\n\r\n    deactivate() {\r\n        window.removeEventListener('keypress', this.boundHandler);\r\n    }\r\n\r\n    movePlayer(direction: string) {\r\n        this.player.move(direction, 1);\r\n    }\r\n\r\n    throttle(callback, wait, context = this) {\r\n        let timeout = null\r\n        const later = () => callback()\r\n\r\n        return function () {\r\n            clearTimeout(timeout)\r\n            timeout = setTimeout(later, wait);\r\n        }\r\n    }\r\n\r\n    handleKeyInput(event) {\r\n        let time = new Date().getTime();\r\n\r\n        if (time > this.lastPressed + 40) {\r\n            switch (event.code.toUpperCase()) {\r\n                case \"65\":\r\n                    break;\r\n                case \"66\":\r\n                    break;\r\n                case \"KEYC\":\r\n                    this.player.collisionEnabled = !this.player.collisionEnabled;\r\n                    break;\r\n                case \"NUMPAD1\":\r\n                    this.movePlayer('sw');\r\n                    break;\r\n                case \"NUMPAD2\":\r\n                    this.movePlayer('s');\r\n                    break;\r\n                case \"NUMPAD3\":\r\n                    this.movePlayer('se');\r\n                    break;\r\n                case \"NUMPAD4\":\r\n                    this.movePlayer('w');\r\n                    break;\r\n                case \"NUMPAD6\":\r\n                    this.movePlayer('e');\r\n                    break;\r\n                case \"NUMPAD7\":\r\n                    this.movePlayer('nw');\r\n                    break;\r\n                case \"NUMPAD8\":\r\n                    this.movePlayer('n');\r\n                    break;\r\n                case \"NUMPAD9\":\r\n                    this.movePlayer('ne');\r\n                    break;\r\n            }\r\n\r\n            this.lastPressed = time;\r\n        }\r\n    }\r\n}","import {Tile} from '../tile/tile';\r\n\r\nexport class RenderEvent {\r\n    symbols: Tile[][];\r\n    scaleX: number;\r\n\r\n    constructor(symbols: Tile[][], scaleX:number) {\r\n        this.scaleX = scaleX;\r\n        this.symbols = symbols;\r\n    }\r\n}","import { inject, Container } from 'aurelia-framework';\r\nimport { Player } from './actor/player';\r\nimport { Vector2, Bounds } from './helpers';\r\nimport { World } from './world/world';\r\nimport { Chunk } from './world/chunk';\r\nimport { Tile } from './tile/tile';\r\n\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { RenderEvent } from './events/render-event';\r\nimport { PlayerMovedEvent } from './events/player-moved-event';\r\n\r\n@inject(World, EventAggregator)\r\nexport class Camera {\r\n    _eventAggregator: EventAggregator;\r\n\r\n    position: Vector2;\r\n    scale: Vector2;\r\n    viewportSize: Vector2;\r\n    viewportScale: number;\r\n    bounds: Array<Vector2>;\r\n    world: World;\r\n    chunks: Chunk[][];\r\n    //viewport: Chunk;\r\n\r\n    viewport: Tile[][];\r\n\r\n\r\n    constructor(world, eventAggregator) {\r\n        this._eventAggregator = eventAggregator;\r\n        this.position = null;\r\n        this.world = world;\r\n        this.viewportSize = new Vector2(100, 50); //this.world.chunkSize //1960x950 = 2.02 aspect ratio\r\n        this.scale = new Vector2(2, 2);\r\n        this.viewport = null;\r\n\r\n        this._eventAggregator.subscribe('PlayerMoved', (event: PlayerMovedEvent) => {\r\n            this.translate(event.position)\r\n        });\r\n    }\r\n\r\n    translate(position: Vector2) {\r\n        //get chunk bounds coordinates\r\n        let startChunk = new Vector2(position.x - Math.floor(this.viewportSize.x / 2), position.y - Math.floor(this.viewportSize.y / 2));\r\n\r\n        this.updateViewport(startChunk, position);\r\n\r\n        this.position = position;\r\n    }\r\n\r\n    setIsPlayer(tile: Vector2) {\r\n        let playerTile = this.world.getTileByWorldPosition(tile)// this.viewport.getTileByWorldPosition(tile);\r\n        playerTile.isPlayer = true;\r\n    }\r\n\r\n    updateViewport(startPos: Vector2, playerPos: Vector2) {\r\n        //needs heavy optimization here\r\n        //get top left and bottom right bounds in world positions\r\n        let startTilePos: Vector2 = new Vector2(playerPos.x - Math.floor(this.viewportSize.x / 2), playerPos.y - Math.floor(this.viewportSize.y / 2));\r\n        let endTilePos: Vector2 = new Vector2(startTilePos.x + this.viewportSize.x, startTilePos.y + this.viewportSize.y);\r\n\r\n        let topLeftChunkPos = this.world.getChunkPositionFromWorldPosition(startTilePos);\r\n        let bottomRightChunkPos = this.world.getChunkPositionFromWorldPosition(endTilePos);\r\n        \r\n        let viewportBuffer: Tile[][] = [];\r\n        //getting the intersecting chunks\r\n        for (let y = topLeftChunkPos.y; y <= bottomRightChunkPos.y; y++) {\r\n            let yPos = y - topLeftChunkPos.y;\r\n            let yCount = viewportBuffer.length;\r\n            for (let x = topLeftChunkPos.x; x <= bottomRightChunkPos.x; x++) {\r\n                let xPos = x - topLeftChunkPos.x;\r\n                let chunks = this.world.getChunk(new Vector2(x, y))\r\n                let startTile = startTilePos;\r\n                let endTile = endTilePos;\r\n                let tiles  = chunks.getTileSubset(new Bounds(new Vector2(startTile.x, startTile.y), new Vector2(endTile.x, endTile.y)));\r\n                //setting the viewport tiles\r\n\r\n                for (let yy = 0; yy < tiles.length; yy++) {\r\n                    let yBuffer = yy + (yPos * yCount);\r\n                    if(viewportBuffer[yBuffer] == undefined)\r\n                        viewportBuffer[yBuffer] = [];\r\n\r\n                    viewportBuffer[yBuffer] = viewportBuffer[yBuffer].concat(tiles[yy]);\r\n                }\r\n            }\r\n        }\r\n        \r\n        let playerTileCache = null;\r\n        \r\n        if(this.viewport != null)\r\n         playerTileCache = this.viewport[Math.floor(this.viewportSize.y / 2)][Math.floor(this.viewportSize.x / 2)];\r\n        \r\n        this.viewport = [];\r\n        this.viewport = viewportBuffer;\r\n        let playerTile = this.viewport[Math.floor(this.viewportSize.y / 2)][Math.floor(this.viewportSize.x / 2)];\r\n        if(playerTileCache)\r\n            playerTileCache.isPlayer = false;\r\n        playerTile.isPlayer = true;\r\n\r\n        let flattendTiles = [].concat(...this.viewport);\r\n        this._eventAggregator.publish('RenderEvent', new RenderEvent(this.viewport, this.viewportScale));\r\n\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Player } from './actor/player';\r\nimport { ItemContext } from './item/item-context';\r\nimport { World } from './world/world';\r\nimport { Vector2 } from './helpers';\r\nimport { Input } from './input/input';\r\nimport { Camera} from './camera';\r\nimport { GenerateHashCode } from './helpers'\r\n\r\n@inject(Player, World, ItemContext, Input, Camera)\r\nexport class Game {\r\n    player: Player = null;\r\n    itemContext: ItemContext = null;\r\n    world: World = null;\r\n    input: Input = null;\r\n    seed: string = \"Test seed\";\r\n    maxWorldSize: number;\r\n    camera: Camera;\r\n    constructor(player: Player, world: World, itemContext: ItemContext, input: Input, camera: Camera) {\r\n\r\n        this.itemContext = itemContext;\r\n        this.player = player;\r\n        this.world = world;\r\n        this.input = input;\r\n        this.maxWorldSize = 200;\r\n        this.camera = camera;\r\n    }\r\n\r\n    init() {\r\n        this.world.generateSeed(GenerateHashCode(this.seed));\r\n        this.world.chunks = [];\r\n        let position = new Vector2((this.world.chunkSize.x * this.maxWorldSize) / 2, (this.world.chunkSize.y * this.maxWorldSize) / 2);\r\n        \r\n        this.player.setPlayerPosition(position);\r\n    }\r\n\r\n}\r\n\r\n","import { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { inject } from 'aurelia-framework';\r\nimport { RenderEvent } from './events/render-event';\r\nimport { Game } from './game';\r\n\r\n@inject(EventAggregator, Game)\r\nexport class Renderer {\r\n    _eventAggregator: EventAggregator;\r\n    canvas: HTMLCanvasElement;\r\n    game: Game;\r\n    ctx: CanvasRenderingContext2D;\r\n\r\n    constructor(ea: EventAggregator, game: Game) {\r\n        this._eventAggregator = ea;\r\n        this.game = game;\r\n\r\n        this._eventAggregator.subscribe('RenderEvent', (event: RenderEvent) => {\r\n            this.draw(event);\r\n        });\r\n    }\r\n\r\n    init(canvas: HTMLCanvasElement) {\r\n        this.canvas = canvas;\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n    };\r\n\r\n    public draw(event: RenderEvent) {\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        let cellSizeX = 8;//Math.ceil(this.canvas.clientWidth / this.game.world.chunkSize.x) / 2;\r\n        let cellSizeY = 16;//Math.ceil(this.canvas.clientHeight / this.game.world.chunkSize.y) / 2;\r\n        this.ctx.lineWidth = 20;\r\n        this.ctx.font = '11px Courier New';\r\n        this.ctx.textAlign = \"center\";\r\n\r\n        for (let y: number = 0; y < event.symbols.length; y++) {\r\n            let row = event.symbols[y];\r\n            for (let x: number = 0; x < row.length; x++) {\r\n                this.ctx.fillStyle = event.symbols[y][x].isPlayer ? \"blue\" : event.symbols[y][x].color;\r\n                let symbol = event.symbols[y][x].isPlayer ? \"@\" : event.symbols[y][x].symbol;\r\n                if (event.symbols[y][x].isPlayer) {\r\n                    this.ctx.shadowColor = \"white\";\r\n                    this.ctx.shadowBlur = 12;\r\n                    this.ctx.lineWidth = 2;\r\n                    this.ctx.strokeText(symbol, x * cellSizeX, y * cellSizeY)\r\n                } else {\r\n                    this.ctx.shadowBlur = 0;\r\n                }\r\n                this.ctx.fillText(symbol, x * cellSizeX, y * cellSizeY);\r\n            }\r\n        }\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Item } from './item/item';\r\nimport * as helpers from './helpers'\r\nimport { Game } from './game';\r\nimport { Renderer } from './renderer';\r\nimport { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { RenderEvent } from './events/render-event';\r\n\r\n@inject(Game, EventAggregator, Renderer)\r\nexport class App {\r\n  public game: Game;\r\n  public renderer: Renderer;\r\n  canvas: HTMLCanvasElement;\r\n\r\n  _eventAggregator: EventAggregator;\r\n  constructor(game: Game, eventAggregator: EventAggregator, renderer: Renderer) {\r\n    this._eventAggregator = eventAggregator;\r\n    this.renderer = renderer;\r\n    this.game = game;\r\n  }\r\n\r\n  attached() {\r\n    this.renderer.init(this.canvas);\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.game.init();\r\n  }\r\n\r\n  AddItem(item) {\r\n    this.game.player.inventory.addItem(item);\r\n  }\r\n\r\n  RemoveItem(item) {\r\n    this.game.player.inventory.removeItem(item);\r\n  }\r\n\r\n  UseItem(item: Item) {\r\n    let i = this.game.player.inventory.getItemById(item.id);\r\n    i.use();\r\n  }\r\n\r\n  toggleCollision() {\r\n    this.game.player.toggleCollision();\r\n  }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import {ItemModule} from '../item-module';\r\nimport {noView} from 'aurelia-framework'; \r\n\r\n@noView\r\nexport class Knife extends ItemModule {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    wield(){\r\n\r\n    }\r\n}","import {Knife} from './knife';\r\nimport {noView} from 'aurelia-framework'; \r\n\r\n@noView\r\nexport class HuntingKnife extends Knife {\r\n    constructor() {\r\n        super();\r\n    }\r\n    wield() {\r\n        super.wield();\r\n        \r\n    }\r\n\r\n    use() {\r\n        super.use();\r\n        this.player.health.damage(\"head\", 5);\r\n    }\r\n}","import {ItemModule} from '../item-module';\r\n\r\nexport class Bandage extends ItemModule {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    use() {\r\n        this.player.health.heal('head', 3);\r\n    }\r\n}","import {Container} from 'aurelia-framework';\r\nimport {HuntingKnife} from './modules/hunting-knife';\r\nimport {Knife} from './modules/knife';\r\nimport {Bandage} from './modules/bandage';\r\n\r\nexport function RegisterItemModules() {\r\n    Container.instance.registerInstance('hunting-knife', new HuntingKnife());\r\n    Container.instance.registerInstance('knife', new Knife());\r\n    Container.instance.registerInstance('bandage', new Bandage());\r\n}\r\n","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\nimport {RegisterItemModules} from './item/item-module-containers';\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\n(<any>Promise).config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n  \r\n  //register modules\r\n  RegisterItemModules();\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export enum Keybinds {\r\n    A,\r\n    B,\r\n    C,\r\n    NUM1,\r\n    NUM2,\r\n    NUM3,\r\n    NUM4,\r\n    NUM5,\r\n    NUM6, \r\n    NUM7,\r\n    NUM8,\r\n    NUM9,\r\n    NUM0\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources(['./item-modules/knife']);\r\n}\r\n","export class Vector2 {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x?:number, y?:number) {\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n    }\r\n\r\n    dot2(x, y) {\r\n        return this.x * x + this.y * y;\r\n    };\r\n\r\n    isInsideBounds(topLeft: Vector2, bottomRight: Vector2) {\r\n        return (this.x  >= topLeft.x && this.x <= bottomRight.x\r\n                && this.y >= topLeft.y && this.y <= bottomRight.y);\r\n    }\r\n\r\n}\r\n\r\nexport class Vector3 {\r\n    public x: number;\r\n    public y: number;\r\n    public z: number;\r\n\r\n    constructor(x?:number, y?:number, z?:number) {\r\n        this.x = x || 0;\r\n        this.y = y || 0;\r\n        this.z = z || 0;\r\n    }\r\n\r\n    dot2(x, y) {\r\n        return this.x * x + this.y * y;\r\n    };\r\n\r\n    dot3(x, y, z) {\r\n        return this.x * x + this.y * y + this.z * z;\r\n    }\r\n}","export class Tree {\r\n    \r\n}",null],"sourceRoot":"..\\src"}