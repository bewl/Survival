{"version":3,"sources":["src/helpers.ts","src/inventory/inventory.ts","src/actor/health.ts","src/tile/tile.ts","src/tile/data/tiles.ts","src/world/chunk.ts","src/world/world.ts","src/actor/actor.ts","src/actor/monster.ts","src/actor/player.ts","src/item/item-module.ts","src/item/stats/item-stats.ts","src/item/stats/weapon-stats.ts","src/item/item.ts","src/item/data/items.ts","src/item/data/weapon-stats.ts","src/item/data/item-stats.ts","src/item/item-context.ts","src/game.ts","src/app.ts","src/environment.ts","D:/My Projects/survival/src/input.js","src/item/modules/knife.ts","src/item/modules/hunting-knife.ts","src/item/modules/bandage.ts","src/item/item-module-containers.ts","src/main.ts","src/resources/index.ts","D:/My Projects/survival/src/app.html"],"names":[],"mappings":"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GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;gBAC/F,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;gBAC5F,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;gBAC7F,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE;gBAChG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC;gBAC3F,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG;gBAC5F,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAA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AC;YAGtC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrE,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7E,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7E,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YACrF,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7E,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YACrF,IAAI,IAAI,GAAG,IAAI,CAAC,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","file":"app-bundle.js","sourcesContent":["interface Enum {\r\n    [id: number]: string\r\n}\r\nexport function GetEnumElements(e: Enum): Array<string> {\r\n    return Object.keys(e).map(a => e[a]).filter(a => typeof a === 'string');\r\n}\r\n\r\nexport class Guid {\r\n    static newGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}\r\n\r\nexport class Vector {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    dot2(x, y) {\r\n        return this.x * x + this.y * y;\r\n    };\r\n\r\n}\r\n\r\nexport class Vector3 {\r\n    public x: number;\r\n    public y: number;\r\n    public z: number;\r\n\r\n    constructor(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    dot2(x, y) {\r\n        return this.x * x + this.y * y;\r\n    };\r\n}\r\n\r\nexport class Random {\r\n    private seed: number;\r\n\r\n    constructor(seed: number) {\r\n        this.seed = seed;\r\n    }\r\n\r\n    private next(min: number, max: number): number {\r\n        max = max || 0;\r\n        min = min || 0;\r\n\r\n        this.seed = (this.seed * 9301 + 49297) % 233280;\r\n        var rnd = this.seed / 233280;\r\n\r\n        return min + rnd * (max - min);\r\n    }\r\n\r\n    // http://indiegamr.com/generate-repeatable-random-numbers-in-js/\r\n    public nextInt(min: number, max: number): number {\r\n        return Math.round(this.next(min, max));\r\n    }\r\n\r\n    public nextDouble(): number {\r\n        return this.next(0, 1);\r\n    }\r\n\r\n    public pick(collection: any[]): any {\r\n        return collection[this.nextInt(0, collection.length - 1)];\r\n    }\r\n}\r\n\r\nexport class Perlin {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n\r\n    p: Array<number>;\r\n\r\n    grad3: Array<Vector3>;\r\n    perm: any;\r\n    gradP: any;\r\n\r\n    constructor() {\r\n        this.grad3 = [new Vector3(1, 1, 0), new Vector3(-1, 1, 0), new Vector3(1, -1, 0), new Vector3(-1, -1, 0),\r\n        new Vector3(1, 0, 1), new Vector3(-1, 0, 1), new Vector3(1, 0, -1), new Vector3(-1, 0, -1),\r\n        new Vector3(0, 1, 1), new Vector3(0, -1, 1), new Vector3(0, 1, -1), new Vector3(0, -1, -1)];\r\n\r\n        this.p = [151, 160, 137, 91, 90, 15,\r\n            131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\r\n            190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\r\n            88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\r\n            77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\r\n            102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\r\n            135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\r\n            5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\r\n            223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\r\n            129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\r\n            251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\r\n            49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\r\n            138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\r\n\r\n        this.perm = new Array(512);\r\n        this.gradP = new Array(512);\r\n\r\n        this.seed(0);\r\n    }\r\n\r\n    dot2(x, y) {\r\n        return this.x * x + this.y * y;\r\n    };\r\n\r\n    dot3(x, y, z) {\r\n        return this.x * x + this.y * y + this.z * z;\r\n    };\r\n\r\n    // To remove the need for index wrapping, double the permutation table length\r\n\r\n\r\n    // This isn't a very good seeding function, but it works ok. It supports 2^16\r\n    // different seed values. Write something better if you need more seeds.\r\n    seed(seed) {\r\n        if (seed > 0 && seed < 1) {\r\n            // Scale the seed out\r\n            seed *= 65536;\r\n        }\r\n\r\n        seed = Math.floor(seed);\r\n        if (seed < 256) {\r\n            seed |= seed << 8;\r\n        }\r\n\r\n        for (var i = 0; i < 256; i++) {\r\n            var v;\r\n            if (i & 1) {\r\n                v = this.p[i] ^ (seed & 255);\r\n            } else {\r\n                v = this.p[i] ^ ((seed >> 8) & 255);\r\n            }\r\n\r\n            this.perm[i] = this.perm[i + 256] = v;\r\n            this.gradP[i] = this.gradP[i + 256] = this.grad3[v % 12];\r\n        }\r\n    };\r\n\r\n\r\n\r\n    /*\r\n    for(var i=0; i<256; i++) {\r\n      perm[i] = perm[i + 256] = p[i];\r\n      gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\r\n    }*/\r\n\r\n    // Skewing and unskewing factors for 2, 3, and 4 dimensions\r\n\r\n\r\n\r\n\r\n    // 2D simplex noise\r\n    simplex2(xin, yin) {\r\n        var F2 = 0.5 * (Math.sqrt(3) - 1);\r\n        var G2 = (3 - Math.sqrt(3)) / 6;\r\n\r\n        var n0, n1, n2; // Noise contributions from the three corners\r\n        // Skew the input space to determine which simplex cell we're in\r\n        var s = (xin + yin) * F2; // Hairy factor for 2D\r\n        var i = Math.floor(xin + s);\r\n        var j = Math.floor(yin + s);\r\n        var t = (i + j) * G2;\r\n        var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\r\n        var y0 = yin - j + t;\r\n        // For the 2D case, the simplex shape is an equilateral triangle.\r\n        // Determine which simplex we are in.\r\n        var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\r\n        if (x0 > y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\r\n            i1 = 1; j1 = 0;\r\n        } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\r\n            i1 = 0; j1 = 1;\r\n        }\r\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\r\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\r\n        // c = (3-sqrt(3))/6\r\n        var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\r\n        var y1 = y0 - j1 + G2;\r\n        var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\r\n        var y2 = y0 - 1 + 2 * G2;\r\n        // Work out the hashed gradient indices of the three simplex corners\r\n        i &= 255;\r\n        j &= 255;\r\n        var gi0 = this.gradP[i + this.perm[j]];\r\n        var gi1 = this.gradP[i + i1 + this.perm[j + j1]];\r\n        var gi2 = this.gradP[i + 1 + this.perm[j + 1]];\r\n        // Calculate the contribution from the three corners\r\n        var t0 = 0.5 - x0 * x0 - y0 * y0;\r\n        if (t0 < 0) {\r\n            n0 = 0;\r\n        } else {\r\n            t0 *= t0;\r\n            n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\r\n        }\r\n        var t1 = 0.5 - x1 * x1 - y1 * y1;\r\n        if (t1 < 0) {\r\n            n1 = 0;\r\n        } else {\r\n            t1 *= t1;\r\n            n1 = t1 * t1 * gi1.dot2(x1, y1);\r\n        }\r\n        var t2 = 0.5 - x2 * x2 - y2 * y2;\r\n        if (t2 < 0) {\r\n            n2 = 0;\r\n        } else {\r\n            t2 *= t2;\r\n            n2 = t2 * t2 * gi2.dot2(x2, y2);\r\n        }\r\n        // Add contributions from each corner to get the final noise value.\r\n        // The result is scaled to return values in the interval [-1,1].\r\n        return 70 * (n0 + n1 + n2);\r\n    };\r\n\r\n    // 3D simplex noise\r\n    simplex3(xin, yin, zin) {\r\n        var F3 = 1 / 3;\r\n        var G3 = 1 / 6;\r\n\r\n        var n0, n1, n2, n3; // Noise contributions from the four corners\r\n\r\n        // Skew the input space to determine which simplex cell we're in\r\n        var s = (xin + yin + zin) * F3; // Hairy factor for 2D\r\n        var i = Math.floor(xin + s);\r\n        var j = Math.floor(yin + s);\r\n        var k = Math.floor(zin + s);\r\n\r\n        var t = (i + j + k) * G3;\r\n        var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\r\n        var y0 = yin - j + t;\r\n        var z0 = zin - k + t;\r\n\r\n        // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\r\n        // Determine which simplex we are in.\r\n        var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\r\n        var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\r\n        if (x0 >= y0) {\r\n            if (y0 >= z0) { i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 1; k2 = 0; }\r\n            else if (x0 >= z0) { i1 = 1; j1 = 0; k1 = 0; i2 = 1; j2 = 0; k2 = 1; }\r\n            else { i1 = 0; j1 = 0; k1 = 1; i2 = 1; j2 = 0; k2 = 1; }\r\n        } else {\r\n            if (y0 < z0) { i1 = 0; j1 = 0; k1 = 1; i2 = 0; j2 = 1; k2 = 1; }\r\n            else if (x0 < z0) { i1 = 0; j1 = 1; k1 = 0; i2 = 0; j2 = 1; k2 = 1; }\r\n            else { i1 = 0; j1 = 1; k1 = 0; i2 = 1; j2 = 1; k2 = 0; }\r\n        }\r\n        // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\r\n        // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\r\n        // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\r\n        // c = 1/6.\r\n        var x1 = x0 - i1 + G3; // Offsets for second corner\r\n        var y1 = y0 - j1 + G3;\r\n        var z1 = z0 - k1 + G3;\r\n\r\n        var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\r\n        var y2 = y0 - j2 + 2 * G3;\r\n        var z2 = z0 - k2 + 2 * G3;\r\n\r\n        var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\r\n        var y3 = y0 - 1 + 3 * G3;\r\n        var z3 = z0 - 1 + 3 * G3;\r\n\r\n        // Work out the hashed gradient indices of the four simplex corners\r\n        i &= 255;\r\n        j &= 255;\r\n        k &= 255;\r\n        var gi0 = this.gradP[i + this.perm[j + this.perm[k]]];\r\n        var gi1 = this.gradP[i + i1 + this.perm[j + j1 + this.perm[k + k1]]];\r\n        var gi2 = this.gradP[i + i2 + this.perm[j + j2 + this.perm[k + k2]]];\r\n        var gi3 = this.gradP[i + 1 + this.perm[j + 1 + this.perm[k + 1]]];\r\n\r\n        // Calculate the contribution from the four corners\r\n        var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\r\n        if (t0 < 0) {\r\n            n0 = 0;\r\n        } else {\r\n            t0 *= t0;\r\n            n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient\r\n        }\r\n        var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\r\n        if (t1 < 0) {\r\n            n1 = 0;\r\n        } else {\r\n            t1 *= t1;\r\n            n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\r\n        }\r\n        var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\r\n        if (t2 < 0) {\r\n            n2 = 0;\r\n        } else {\r\n            t2 *= t2;\r\n            n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\r\n        }\r\n        var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\r\n        if (t3 < 0) {\r\n            n3 = 0;\r\n        } else {\r\n            t3 *= t3;\r\n            n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\r\n        }\r\n        // Add contributions from each corner to get the final noise value.\r\n        // The result is scaled to return values in the interval [-1,1].\r\n        return 32 * (n0 + n1 + n2 + n3);\r\n\r\n    };\r\n\r\n// ##### Perlin noise stuff\r\n\r\nfade(t) {\r\n    return t * t * t * (t * (t * 6 - 15) + 10);\r\n}\r\n\r\nlerp(a, b, t) {\r\n    return (1 - t) * a + t * b;\r\n}\r\n\r\n// 2D Perlin Noise\r\nperlin2(x, y) {\r\n    // Find unit grid cell containing point\r\n    var X = Math.floor(x), Y = Math.floor(y);\r\n    // Get relative xy coordinates of point within that cell\r\n    x = x - X; y = y - Y;\r\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n    X = X & 255; Y = Y & 255;\r\n\r\n    // Calculate noise contributions from each of the four corners\r\n    var n00 = this.gradP[X + this.perm[Y]].dot2(x, y);\r\n    var n01 = this.gradP[X + this.perm[Y + 1]].dot2(x, y - 1);\r\n    var n10 = this.gradP[X + 1 + this.perm[Y]].dot2(x - 1, y);\r\n    var n11 = this.gradP[X + 1 + this.perm[Y + 1]].dot2(x - 1, y - 1);\r\n\r\n    // Compute the fade curve value for x\r\n    var u = this.fade(x);\r\n\r\n    // Interpolate the four results\r\n    return this.lerp(\r\n        this.lerp(n00, n10, u),\r\n        this.lerp(n01, n11, u),\r\n        this.fade(y));\r\n};\r\n\r\n// 3D Perlin Noise\r\nperlin3(x, y, z) {\r\n    // Find unit grid cell containing point\r\n    var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\r\n    // Get relative xyz coordinates of point within that cell\r\n    x = x - X; y = y - Y; z = z - Z;\r\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\r\n    X = X & 255; Y = Y & 255; Z = Z & 255;\r\n\r\n    // Calculate noise contributions from each of the eight corners\r\n    var n000 = this.gradP[X + this.perm[Y + this.perm[Z]]].dot3(x, y, z);\r\n    var n001 = this.gradP[X + this.perm[Y + this.perm[Z + 1]]].dot3(x, y, z - 1);\r\n    var n010 = this.gradP[X + this.perm[Y + 1 + this.perm[Z]]].dot3(x, y - 1, z);\r\n    var n011 = this.gradP[X + this.perm[Y + 1 + this.perm[Z + 1]]].dot3(x, y - 1, z - 1);\r\n    var n100 = this.gradP[X + 1 + this.perm[Y + this.perm[Z]]].dot3(x - 1, y, z);\r\n    var n101 = this.gradP[X + 1 + this.perm[Y + this.perm[Z + 1]]].dot3(x - 1, y, z - 1);\r\n    var n110 = this.gradP[X + 1 + this.perm[Y + 1 + this.perm[Z]]].dot3(x - 1, y - 1, z);\r\n    var n111 = this.gradP[X + 1 + this.perm[Y + 1 + this.perm[Z + 1]]].dot3(x - 1, y - 1, z - 1);\r\n\r\n    // Compute the fade curve value for x, y, z\r\n    var u = this.fade(x);\r\n    var v = this.fade(y);\r\n    var w = this.fade(z);\r\n\r\n    // Interpolate\r\n    return this.lerp(\r\n        this.lerp(\r\n            this.lerp(n000, n100, u),\r\n            this.lerp(n001, n101, u), w),\r\n        this.lerp(\r\n            this.lerp(n010, n110, u),\r\n            this.lerp(n011, n111, u), w),\r\n        v);\r\n};\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Item} from '../item/item';\r\nimport {Guid} from '../helpers';\r\n\r\nexport class Inventory {\r\n\r\n    private _items:Array<Item> = [];\r\n    public get items():Array<Item> {\r\n        return this._items;\r\n    }\r\n    public set items(value:Array<Item>) {\r\n        this._items = value;\r\n    }\r\n\r\n    private _volumeCap:number = null;\r\n    public get volumeCap():number {\r\n        return this._volumeCap;\r\n    }\r\n    public set volumeCap(value:number) {\r\n        this._volumeCap = value;\r\n    }\r\n\r\n    private _weightCap:number = null;\r\n    public get weightCap():number {\r\n        return this._weightCap;\r\n    }\r\n    public set weightCap(value:number) {\r\n        this._weightCap = value;\r\n    }\r\n\r\n    currentVolume:number = 0;\r\n    currentWeight:number = 0;\r\n\r\n    constructor() {\r\n        this.weightCap = 60;\r\n        this.volumeCap = 15;\r\n    }\r\n    \r\n    getItemById(id:string):Item {\r\n        return this.items.find(item => item.id === id);\r\n    }\r\n\r\n    addItem(item: Item) {\r\n        this.currentVolume += item.stats.volume;\r\n        this.currentWeight += item.stats.weight;\r\n        //let mod = require('./item-modules/' + item.module);\r\n        let i = Object.assign(new Item(), item);\r\n        i.id = Guid.newGuid();\r\n        this.items.push(i);\r\n        //update volumeCurrent\r\n        //update weightCurrent\r\n        //run any 'equip' script associated with item\r\n    }\r\n\r\n    removeItem(item:Item) {\r\n        this.currentVolume -= item.stats.volume;\r\n        this.currentWeight -= item.stats.weight;\r\n\r\n        this.items = this.items.filter(i => i.id !== item.id);\r\n\r\n        //update volumeCurrent\r\n        //update weightCurrent\r\n        //run any 'remove' script associated with item\r\n    }\r\n\r\n}","export class Health {\r\n    parts:Array<any>;\r\n    head: number = 100;\r\n    torso: number = 100;\r\n    leftArm: number = 100;\r\n    rightArm: number = 100;\r\n    leftHand: number = 100;\r\n    rightHand: number = 100;\r\n    leftLeg: number = 100;\r\n    rightLeg: number = 100;\r\n    leftFoot: number = 100;\r\n    rightFoot: number = 100;\r\n\r\n    constructor() {\r\n        this.parts = [\r\n            {id: 'head', description: 'Head', value: 100},\r\n            {id: 'torso', description: 'Torso', value: 100},\r\n            {id: 'leftArm', description: 'Left Arm', value: 100},\r\n            {id: 'rightArm', description: 'Right Arm', value: 100},\r\n            {id: 'leftHand', description: 'Left Hand', value: 100},\r\n            {id: 'rightHand', description: 'Right Hand', value: 100},\r\n            {id: 'leftLeg', description: 'Left Leg', value: 100},\r\n            {id: 'rightLeg', description: 'Right Leg', value: 100},\r\n            {id: 'leftFoot', description: 'Left Foot', value: 100},\r\n            {id: 'rightFoot', description: 'Right Foot', value: 100},\r\n\r\n        ]\r\n    }\r\n\r\n    damage(partId:string, value:number) {\r\n        //find part\r\n        let part = this.parts.find(p => p.id === partId);\r\n\r\n        part.value -= value;\r\n        //apply value (create rules as well)\r\n    }\r\n\r\n    heal(partId:string, value:number) {\r\n        //find part\r\n        let part = this.parts.find(p => p.id === partId);\r\n\r\n        part.value += value;\r\n        //apply value (create rules as well)\r\n    }\r\n}","import {Vector} from '../helpers';\r\nimport {Inventory} from '../inventory/inventory';\r\n\r\nexport class Tile {\r\n    public position: Vector;\r\n    public inventory: Inventory;\r\n    public title:string;\r\n    public movementCost:number;\r\n    public symbol:string;\r\n    public color:string;\r\n    \r\n    constructor() {\r\n        this.inventory = new Inventory();\r\n    }   \r\n}","let tiles = [\r\n    {\r\n        title: \"grass\",\r\n        color: \"#DAF7A6\",\r\n        symbol: 176,\r\n        movementCost: 50,\r\n    },\r\n    {\r\n        title: \"slope\",\r\n        color: \"#FFC300\",\r\n        symbol: 176,\r\n        movementCost: 75,\r\n    },\r\n    {\r\n        title: \"slope2\",\r\n        color: \"#FF5733\",\r\n        symbol: 176,\r\n        movementCost: 100,\r\n    },\r\n    {\r\n        title: \"slope3\",\r\n        color: \"#C70039\",\r\n        symbol: 178,\r\n        movementCost: 150,\r\n    },\r\n    {\r\n        title: \"ridge\",\r\n        color: \"#900C3F\",\r\n        symbol: 178,\r\n        movementCost: 75,\r\n    },\r\n];\r\n\r\nexport default tiles;","import {Container} from 'aurelia-framework';\r\nimport { Tile } from '../tile/tile';\r\nimport { Random, Perlin, Vector } from '../helpers';\r\nimport tiles from '../tile/data/tiles';\r\nconst TileData = tiles;\r\n\r\nexport class Chunk {\r\n    public tiles: Tile[][];\r\n    public seed: number;\r\n    public worldX: number;\r\n    public worldY: number;\r\n    public chunkSizeX: number;\r\n    public chunkSizeY: number;\r\n\r\n    private perlin: Perlin;\r\n    constructor(position:Vector, chunkSize:Vector) {\r\n        this.chunkSizeX = chunkSize.x;\r\n        this.chunkSizeY = chunkSize.y;\r\n        this.perlin = Container.instance.get(Perlin) as Perlin;\r\n        this.tiles = [];\r\n        this.worldX = (position.x * this.chunkSizeX) + position.x;\r\n        this.worldY = (position.y * this.chunkSizeY) + position.y;\r\n\r\n        this.seedChunk();\r\n    }\r\n\r\n    seedChunk() {\r\n        for (var y = 0; y < this.chunkSizeY; y++) {\r\n            this.tiles[y] = [];\r\n            for (var x = 0; x < this.chunkSizeX; x++) {\r\n\r\n                let value = this.perlin.simplex2((x + this.worldX) / 50, (y + this.worldY) / 50) * 500;\r\n\r\n                let tileType = null;\r\n\r\n                if (value < 100) {\r\n                    tileType = TileData.find(tile => tile.title === 'grass');\r\n                }\r\n                if(value >= 100 && value < 200) {\r\n                    tileType = TileData.find(tile => tile.title === 'slope');\r\n                }\r\n                if(value >= 200 && value < 300) {\r\n                    tileType = TileData.find(tile => tile.title === 'slope2');\r\n                }\r\n                if(value >= 300 && value < 400) {\r\n                    tileType = TileData.find(tile => tile.title === 'slope3');\r\n                }\r\n                if(value >= 400 && value < 500) {\r\n                    tileType = TileData.find(tile => tile.title === 'ridge');\r\n                }\r\n\r\n                let tile = new Tile();\r\n\r\n                tile.color = tileType.color;\r\n                tile.movementCost = tileType.movementCost;\r\n                tile.position = new Vector(x, y);\r\n                tile.title = tileType.title;\r\n                tile.symbol = String.fromCharCode(tileType.symbol);\r\n                \r\n                this.tiles[y][x] = tile;\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n}\r\n","import { inject } from 'aurelia-framework';\r\nimport { Chunk } from './chunk';\r\nimport { Perlin, Random, Vector } from '../helpers';\r\n\r\n@inject(Perlin)\r\nexport class World {\r\n    public chunks: Chunk[][];\r\n    public worldSizeX: number;\r\n    public worldSizeY: number;\r\n    public chunkSizeX: number;\r\n    public chunkSizeY: number;\r\n    public seed: number;\r\n    private perlin: Perlin;\r\n\r\n    constructor(perlin) {\r\n        this.perlin = perlin;\r\n        this.worldSizeX = 4;\r\n        this.worldSizeY = 4;\r\n        this.chunkSizeX = 50;\r\n        this.chunkSizeY = 38;\r\n        this.chunks = [];\r\n        this.seed = new Random(Math.floor(Math.random() * 32000)).nextDouble();\r\n\r\n    }\r\n\r\n    generateWorld() {\r\n        this.perlin.seed(this.seed);\r\n\r\n        for (var y = 0; y < this.worldSizeX; y++) {\r\n            this.chunks[y] = [];\r\n            for (var x = 0; x < this.worldSizeY; x++) {\r\n                this.chunks[y][x] = new Chunk(new Vector(x, y), new Vector(this.chunkSizeX, this.chunkSizeY));\r\n            }\r\n        }\r\n    }\r\n}","import {Container} from 'aurelia-framework';\r\nimport {World} from '../world/world';\r\nimport {Inventory} from '../inventory/inventory';\r\nimport {Health} from './health';\r\nimport {Vector} from '../helpers';\r\n\r\nexport class Actor {\r\n    public world:World;\r\n    public inventory:Inventory = null;\r\n    public health:Health;\r\n    public position:Vector;\r\n    public symbol:string;\r\n    public color:string;\r\n\r\n    constructor() {\r\n        this.world = Container.instance.get(World);\r\n    }\r\n}","import {Container} from 'aurelia-framework';\r\nimport {Actor} from './actor';\r\n\r\nexport class Monster extends Actor {\r\n    constructor() {\r\n        super();\r\n        //this.enemy = Container.instance.get(Player) as Player;\r\n    }\r\n\r\n    attack() {\r\n        \r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Inventory} from '../inventory/inventory';\r\nimport {Health} from './health';\r\nimport {Item} from '../item/item';\r\nimport {Monster} from './monster';\r\nimport {Vector} from '../helpers';\r\nimport {World} from '../world/world';\r\nimport {Actor} from './actor';\r\n\r\nexport class Player extends Actor{\r\n    public enemy:Monster;\r\n    public world:World;\r\n    \r\n    constructor() {\r\n        super();\r\n        this.enemy = null;\r\n\r\n    }\r\n\r\n    pickUp(item:Item) {\r\n        this.inventory.addItem(item);\r\n        \r\n    }\r\n\r\n    attack() {\r\n\r\n    }\r\n}","import {inject, Container} from 'aurelia-framework';\r\nimport {Player} from '../actor/player';\r\n\r\nexport class ItemModule {\r\n    player:Player;\r\n    constructor() {\r\n        this.player = Container.instance.get(Player);\r\n    }\r\n\r\n    wield() {\r\n        //this.player.inventory.\r\n    }\r\n\r\n    use() {\r\n        return null;\r\n    }\r\n\r\n    attack() {\r\n\r\n    }\r\n}","export class ItemStats {\r\n    durability:number;\r\n    weight:number;\r\n    volume:number;\r\n    charges:number;\r\n    decay:number; //in hours\r\n}","export class WeaponStats {\r\n    range:number;\r\n    bash:number;\r\n    pierce:number;\r\n    slash:number;\r\n    ammoType:string;\r\n}","import { ItemModule } from './item-module';\r\nimport { Aurelia, inject } from 'aurelia-framework';\r\nimport { Container } from 'aurelia-dependency-injection';\r\nimport { Player } from '../actor/player';\r\nimport { ItemStats} from './stats/item-stats';\r\nimport { WeaponStats} from './stats/weapon-stats';\r\n\r\nexport class Item {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    category: string;\r\n    module: string;\r\n    stats:ItemStats;\r\n    weaponStats : WeaponStats;\r\n    container: Container;\r\n\r\n\r\n    constructor() {\r\n        //TODO need a mapper for this\r\n        this.container = Container.instance;\r\n        this.id = \"\";\r\n        this.title = \"\";\r\n        this.description = \"\";\r\n        this.category = \"\";\r\n        this.module = \"\";\r\n        this.stats = null;\r\n        this.weaponStats = null;\r\n    }\r\n\r\n    static mapItem(data) {\r\n        let item = new Item();\r\n        item.category = data.category;\r\n        item.description = data.description;\r\n        item.module = data.module;\r\n        item.title = data.title;\r\n        \r\n        return item;\r\n    }\r\n\r\n    static mapItemStats(data) {\r\n        let stats = new ItemStats();\r\n        stats.charges = data.charges;\r\n        stats.decay = data.decay;\r\n        stats.volume = data.volume;\r\n        stats.weight = data.weight;\r\n        stats.durability = data.durability;\r\n\r\n        return stats;\r\n    }\r\n\r\n    static mapWeaponStats(data) {\r\n        let stats = new WeaponStats();\r\n        stats.ammoType = data.ammoType;\r\n        stats.bash = data.bash;\r\n        stats.pierce = data.pierce;\r\n        stats.range = data.range;\r\n        stats.slash = data.slash;\r\n\r\n        return stats;\r\n    }\r\n\r\n    use() {\r\n        let mod = this.container.get(this.module) as ItemModule;\r\n        mod.use();\r\n\r\n        //handle if there are charges on this item or not\r\n        if (this.stats.charges !== -1) {\r\n            if (this.stats.charges > 0) {\r\n                if (this.stats.charges === 1) {\r\n                    let player = this.container.get(Player) as Player;\r\n                    player.inventory.removeItem(this);\r\n                }\r\n\r\n                this.stats.charges -= 1;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {Item} from \"../item\";\r\n\r\nlet items: any = [\r\n    {\r\n        \"title\": \"Bandage\",\r\n        \"description\": \"This is a description\",\r\n        \"category\": \"TOOL\",\r\n        \"module\": \"bandage\"\r\n    },\r\n    {\r\n        \"title\": \"Hunting Knife\",\r\n        \"description\": \"This is a description\",\r\n        \"category\": \"WEAPON\",\r\n        \"module\": \"hunting-knife\"\r\n    }\r\n];\r\n\r\nexport default items;\r\n\r\n\r\n","let weaponStats: any = [\r\n    {\r\n        id: \"hunting-knife\",\r\n        range: 0,\r\n        bash: 0,\r\n        pierce: 6,\r\n        slash: 2,\r\n        ammoType: null\r\n    }\r\n\r\n];\r\n\r\nexport default weaponStats;","let itemStats = [\r\n    {\r\n        id: 'bandage',\r\n        charges: 1,\r\n        decay: -1,\r\n        volume: 0.5,\r\n        weight: 0.5,\r\n        durability: 100\r\n    },\r\n    {\r\n        id: 'hunting-knife',\r\n        charges: -1,\r\n        decay: -1,\r\n        volume: 0.5,\r\n        weight: 0.5,\r\n        durability: 100\r\n    }\r\n\r\n];\r\n\r\nexport default itemStats;","import {Item} from \"./item\";\r\nimport items from \"./data/items\";\r\nimport weaponStats from \"./data/weapon-stats\";\r\nimport itemStats from \"./data/item-stats\";\r\nimport {Guid} from '../helpers';\r\n\r\nexport class ItemContext {\r\n    items:Array<Item>;\r\n\r\n    constructor() {\r\n        this.items = [];\r\n        this.LoadItems();\r\n    }\r\n\r\n    LoadItems() {\r\n        items.forEach(data => {\r\n            let iStats = itemStats.find(s => s.id === data.module);\r\n            let wStats = weaponStats.find(s => s.id === data.module);\r\n            \r\n            let item = Item.mapItem(data);\r\n            \r\n            if(iStats) {\r\n                item.stats = Item.mapItemStats(iStats);\r\n            }\r\n\r\n            if(wStats) {\r\n                item.weaponStats = Item.mapWeaponStats(wStats);\r\n            }\r\n            \r\n            this.AddItem(item);\r\n        })\r\n    }\r\n\r\n    AddItem(item:Item) {\r\n        this.items.push(item);\r\n    }\r\n\r\n    \r\n\r\n    \r\n}","import {inject} from 'aurelia-framework';\r\nimport {Player} from './actor/player';\r\nimport {ItemContext} from './item/item-context';\r\nimport {World} from './world/world';\r\n\r\n@inject(Player, World, ItemContext)\r\nexport class Game {\r\n    player: Player = null;\r\n    itemContext: ItemContext = null;\r\n    world:World = null;\r\n\r\n    constructor(player: Player, world: World, itemContext: ItemContext){\r\n        this.player = player;\r\n        this.itemContext = itemContext;\r\n        this.world = world;\r\n\r\n        this.world.generateWorld();\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport { Item } from './item/item';\r\nimport * as helpers from './helpers'\r\nimport {Game} from './game';\r\n\r\n@inject(Game)\r\nexport class App {\r\n  public itemList:Array<Item>;\r\n  public item: Item;\r\n  public game: Game;\r\n  public itemCategories: Array<string>;\r\n  public itemLifespan: number = 0 //infinite;\r\n\r\n  constructor(game: Game) {\r\n    //this.itemCategories = helpers.GetEnumElements(ItemEnums.ItemCategories);\r\n    this.game = game;\r\n    //this.item = item;\r\n\r\n    //this.item.lifespan = 30;\r\n  }\r\n\r\n  AddItem(item) {\r\n    this.game.player.inventory.addItem(item);\r\n  }\r\n\r\n  RemoveItem(item) {\r\n    this.game.player.inventory.removeItem(item);\r\n  }\r\n\r\n  UseItem(item: Item) {\r\n    let i = this.game.player.inventory.getItemById(item.id);\r\n      i.use();\r\n  }\r\n  //Change out options based on category selected (i.e. Weapon (what ammo type?))\r\n  \r\n  /********\r\n   identify lists for category selections\r\n  ********/\r\n  //- Item category\r\n  \r\n  //Lifetime timer (optional random)\r\n  //add item\r\n  //remove item\r\n  //select item\r\n  //save item\r\n  //sort items\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n",null,"import {ItemModule} from '../item-module';\r\nimport {noView} from 'aurelia-framework'; \r\n\r\n@noView\r\nexport class Knife extends ItemModule {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    wield(){\r\n\r\n    }\r\n}","import {Knife} from './knife';\r\nimport {noView} from 'aurelia-framework'; \r\n\r\n@noView\r\nexport class HuntingKnife extends Knife {\r\n    constructor() {\r\n        super();\r\n    }\r\n    wield() {\r\n        super.wield();\r\n        \r\n    }\r\n\r\n    use() {\r\n        super.use();\r\n        this.player.health.damage(\"head\", 5);\r\n    }\r\n}","import {ItemModule} from '../item-module';\r\n\r\nexport class Bandage extends ItemModule {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    use() {\r\n        this.player.health.heal('head', 3);\r\n    }\r\n}","import {Container} from 'aurelia-framework';\r\nimport {HuntingKnife} from './modules/hunting-knife';\r\nimport {Knife} from './modules/knife';\r\nimport {Bandage} from './modules/bandage';\r\n\r\nexport function RegisterItemModules() {\r\n    Container.instance.registerInstance('hunting-knife', new HuntingKnife());\r\n    Container.instance.registerInstance('knife', new Knife());\r\n    Container.instance.registerInstance('bandage', new Bandage());\r\n}\r\n","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\nimport {RegisterItemModules} from './item/item-module-containers';\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\n(<any>Promise).config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n  \r\n  //register modules\r\n  RegisterItemModules();\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources(['./item-modules/knife']);\r\n}\r\n",null],"sourceRoot":"..\\src"}