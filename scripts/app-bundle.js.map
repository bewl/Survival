{"version":3,"sources":["src/itemenums.ts","src/helpers.ts","D:/My Projects/survival/src/item/item-interface.js","src/item/item-module.ts","src/item/item.ts","src/inventory.ts","src/player.ts","src/item/data/items.ts","src/item-context.ts","src/game.ts","src/app.ts","src/environment.ts","D:/My Projects/survival/src/input.js","src/item/modules/knife.ts","src/item/modules/hunting-knife.ts","src/item/item-module-containers.ts","src/main.ts","D:/My Projects/survival/src/designer/item-designer.js","src/resources/index.ts","src/health.ts","src/item/modules/bandage.ts","D:/My Projects/survival/src/item/data/item-stats.js","src/item/data/weapon-stats.ts","src/item/stats/item-stats.ts","src/item/item-context.ts","src/monster.ts","D:/My Projects/survival/src/item/stats/weapon-stats.js","D:/My Projects/survival/src/app.html","D:/My Projects/survival/src/designer/item-designer.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export enum ItemCategories {\r\n    FOOD,\r\n    DRINK,\r\n    WEAPON,\r\n    AMMO,\r\n    CLOTHING,\r\n    TOOL,\r\n    STRUCTURE\r\n}","interface Enum {\r\n    [id: number]: string\r\n}\r\nexport function GetEnumElements(e: Enum): Array<string> {\r\n    return Object.keys(e).map(a => e[a]).filter(a => typeof a === 'string');\r\n}\r\n\r\nexport class Guid {\r\n    static newGuid() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}",null,"import {inject, Container} from 'aurelia-framework';\r\nimport {Player} from '../player';\r\n\r\nexport class ItemModule {\r\n    player:Player;\r\n    constructor() {\r\n        this.player = Container.instance.get(Player);\r\n    }\r\n\r\n    wield() {\r\n        //this.player.inventory.\r\n    }\r\n\r\n    use() {\r\n        return null;\r\n    }\r\n\r\n    attack() {\r\n\r\n    }\r\n}","import { ItemModule } from './item-module';\r\nimport { Aurelia, inject } from 'aurelia-framework';\r\nimport { Container } from 'aurelia-dependency-injection';\r\nimport { Player } from '../player';\r\nimport { ItemStats} from './stats/item-stats';\r\n\r\nexport class Item {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    category: string;\r\n    module: string;\r\n    stats:ItemStats;\r\n    \r\n    container: Container;\r\n\r\n\r\n    constructor() {\r\n        //TODO need a mapper for this\r\n        this.container = Container.instance;\r\n        this.id = \"\";\r\n        this.title = \"\";\r\n        this.description = \"\";\r\n        this.category = \"\";\r\n        this.module = \"\";\r\n        this.stats = new ItemStats();\r\n    }\r\n\r\n    static mapItem(data) {\r\n        let item = new Item();\r\n        item.category = data.category;\r\n        item.description = data.description;\r\n        item.module = data.module;\r\n        item.title = data.title;\r\n        \r\n        return item;\r\n    }\r\n\r\n    static mapStats(data) {\r\n        let stats = new ItemStats();\r\n        stats.charges = data.charges;\r\n        stats.decay = data.decay;\r\n        stats.volume = data.volume;\r\n        stats.weight = data.weight;\r\n        stats.durability = data.durability;\r\n\r\n        return stats;\r\n    }\r\n\r\n    use() {\r\n        let mod = this.container.get(this.module) as ItemModule;\r\n        mod.use();\r\n\r\n        //handle if there are charges on this item or not\r\n        if (this.stats.charges !== -1) {\r\n            if (this.stats.charges > 0) {\r\n                if (this.stats.charges === 1) {\r\n                    let player = this.container.get(Player) as Player;\r\n                    player.inventory.removeItem(this);\r\n                }\r\n\r\n                this.stats.charges -= 1;\r\n            }\r\n        }\r\n    }\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Item} from './item/item';\r\nimport {Guid} from './helpers';\r\n\r\nexport class Inventory {\r\n\r\n    private _items:Array<Item> = [];\r\n    public get items():Array<Item> {\r\n        return this._items;\r\n    }\r\n    public set items(value:Array<Item>) {\r\n        this._items = value;\r\n    }\r\n\r\n    private _volumeCap:number = null;\r\n    public get volumeCap():number {\r\n        return this._volumeCap;\r\n    }\r\n    public set volumeCap(value:number) {\r\n        this._volumeCap = value;\r\n    }\r\n\r\n    private _weightCap:number = null;\r\n    public get weightCap():number {\r\n        return this._weightCap;\r\n    }\r\n    public set weightCap(value:number) {\r\n        this._weightCap = value;\r\n    }\r\n\r\n    currentVolume:number = 0;\r\n    currentWeight:number = 0;\r\n\r\n    constructor() {\r\n        this.weightCap = 60;\r\n        this.volumeCap = 15;\r\n    }\r\n    \r\n    getItemById(id:string):Item {\r\n        return this.items.find(item => item.id === id);\r\n    }\r\n\r\n    addItem(item: Item) {\r\n        this.currentVolume += item.stats.volume;\r\n        this.currentWeight += item.stats.weight;\r\n        //let mod = require('./item-modules/' + item.module);\r\n        let i = Object.assign(new Item(), item);\r\n        i.id = Guid.newGuid();\r\n        this.items.push(i);\r\n        //update volumeCurrent\r\n        //update weightCurrent\r\n        //run any 'equip' script associated with item\r\n    }\r\n\r\n    removeItem(item:Item) {\r\n        this.currentVolume -= item.stats.volume;\r\n        this.currentWeight -= item.stats.weight;\r\n\r\n        this.items = this.items.filter(i => i.id !== item.id);\r\n\r\n        //update volumeCurrent\r\n        //update weightCurrent\r\n        //run any 'remove' script associated with item\r\n    }\r\n\r\n}","import {inject} from 'aurelia-framework';\r\nimport {Inventory} from './inventory';\r\nimport {Health} from './health';\r\nimport {Item} from './item/item';\r\n\r\nexport class Player {\r\n    public inventory:Inventory = null;\r\n    public health:Health;\r\n\r\n    constructor() {\r\n        this.health = new Health();\r\n        this.inventory = new Inventory();\r\n    }\r\n\r\n    pickUp(item:Item) {\r\n        this.inventory.addItem(item);\r\n    }\r\n\r\n    attack() {\r\n\r\n    }\r\n}","import {Item} from \"../item\";\r\n\r\nlet items: any = [\r\n    {\r\n        \"title\": \"Bandage\",\r\n        \"description\": \"This is a description\",\r\n        \"category\": \"TOOL\",\r\n        \"module\": \"bandage\"\r\n    },\r\n    {\r\n        \"title\": \"Hunting Knife\",\r\n        \"description\": \"This is a description\",\r\n        \"category\": \"WEAPON\",\r\n        \"module\": \"hunting-knife\"\r\n    }\r\n];\r\n\r\nexport default items;\r\n\r\n\r\n","import {Item} from \"./item/item\";\r\nimport items from \"./item/data/items\";\r\nimport {Guid} from './helpers';\r\n\r\nexport class ItemContext {\r\n    items:Array<Item>;\r\n\r\n    constructor() {\r\n        this.items = [];\r\n        this.LoadItems();\r\n    }\r\n\r\n    LoadItems() {\r\n        items.forEach(data => {\r\n            let item = Item.map(data);\r\n            this.AddItem(item);\r\n        })\r\n    }\r\n\r\n    AddItem(item:Item) {\r\n        this.items.push(item);\r\n    }\r\n\r\n    \r\n\r\n    \r\n}","import {inject} from 'aurelia-framework';\r\nimport {Player} from './player';\r\nimport {ItemContext} from './item/item-context';\r\n\r\n\r\n@inject(Player, ItemContext)\r\nexport class Game {\r\n    player: Player = null;\r\n    itemContext: ItemContext = null;\r\n\r\n    constructor(player: Player, itemContext: ItemContext){\r\n        this.player = player;\r\n        this.itemContext = itemContext;\r\n    }\r\n}","import { inject } from 'aurelia-framework';\r\nimport * as ItemEnums from './itemenums';\r\nimport { Item } from './item/item';\r\nimport * as helpers from './helpers'\r\nimport {Game} from './game';\r\n\r\n@inject(Game)\r\nexport class App {\r\n  public itemList:Array<Item>;\r\n  public item: Item;\r\n  public game: Game;\r\n  public itemCategories: Array<string>;\r\n  public itemLifespan: number = 0 //infinite;\r\n\r\n  constructor(game: Game) {\r\n    //this.itemCategories = helpers.GetEnumElements(ItemEnums.ItemCategories);\r\n    this.game = game;\r\n    //this.item = item;\r\n\r\n    //this.item.lifespan = 30;\r\n  }\r\n\r\n  AddItem(item) {\r\n    this.game.player.inventory.addItem(item);\r\n  }\r\n\r\n  RemoveItem(item) {\r\n    this.game.player.inventory.removeItem(item);\r\n  }\r\n\r\n  UseItem(item: Item) {\r\n    let i = this.game.player.inventory.getItemById(item.id);\r\n      i.use();\r\n  }\r\n  //Change out options based on category selected (i.e. Weapon (what ammo type?))\r\n  \r\n  /********\r\n   identify lists for category selections\r\n  ********/\r\n  //- Item category\r\n  \r\n  //Lifetime timer (optional random)\r\n  //add item\r\n  //remove item\r\n  //select item\r\n  //save item\r\n  //sort items\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n",null,"import {ItemModule} from '../item-module';\r\nimport {noView} from 'aurelia-framework'; \r\n\r\n@noView\r\nexport class Knife extends ItemModule {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    wield(){\r\n\r\n    }\r\n}","import {Knife} from './knife';\r\nimport {noView} from 'aurelia-framework'; \r\n\r\n@noView\r\nexport class HuntingKnife extends Knife {\r\n    constructor() {\r\n        super();\r\n    }\r\n    wield() {\r\n        super.wield();\r\n        \r\n    }\r\n\r\n    use() {\r\n        super.use();\r\n        this.player.health.damage(\"head\", 5);\r\n    }\r\n}","import {Container} from 'aurelia-framework';\r\nimport {HuntingKnife} from './modules/hunting-knife';\r\nimport {Knife} from './modules/knife';\r\nimport {Bandage} from './modules/bandage';\r\n\r\nexport function RegisterItemModules() {\r\n    Container.instance.registerInstance('hunting-knife', new HuntingKnife());\r\n    Container.instance.registerInstance('knife', new Knife());\r\n    Container.instance.registerInstance('bandage', new Bandage());\r\n}\r\n","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\nimport {RegisterItemModules} from './item/item-module-containers';\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\n(<any>Promise).config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n  \r\n  //register modules\r\n  RegisterItemModules();\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n",null,"import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources(['./item-modules/knife']);\r\n}\r\n","export class Health {\r\n    parts:Array<any>;\r\n    head: number = 100;\r\n    torso: number = 100;\r\n    leftArm: number = 100;\r\n    rightArm: number = 100;\r\n    leftHand: number = 100;\r\n    rightHand: number = 100;\r\n    leftLeg: number = 100;\r\n    rightLeg: number = 100;\r\n    leftFoot: number = 100;\r\n    rightFoot: number = 100;\r\n\r\n    constructor() {\r\n        this.parts = [\r\n            {id: 'head', description: 'Head', value: 100},\r\n            {id: 'torso', description: 'Torso', value: 100},\r\n            {id: 'leftArm', description: 'Left Arm', value: 100},\r\n            {id: 'rightArm', description: 'Right Arm', value: 100},\r\n            {id: 'leftHand', description: 'Left Hand', value: 100},\r\n            {id: 'rightHand', description: 'Right Hand', value: 100},\r\n            {id: 'leftLeg', description: 'Left Leg', value: 100},\r\n            {id: 'rightLeg', description: 'Right Leg', value: 100},\r\n            {id: 'leftFoot', description: 'Left Foot', value: 100},\r\n            {id: 'rightFoot', description: 'Right Foot', value: 100},\r\n\r\n        ]\r\n    }\r\n\r\n    damage(partId:string, value:number) {\r\n        //find part\r\n        let part = this.parts.find(p => p.id === partId);\r\n\r\n        part.value -= value;\r\n        //apply value (create rules as well)\r\n    }\r\n\r\n    heal(partId:string, value:number) {\r\n        //find part\r\n        let part = this.parts.find(p => p.id === partId);\r\n\r\n        part.value += value;\r\n        //apply value (create rules as well)\r\n    }\r\n}","import {ItemModule} from '../item-module';\r\n\r\nexport class Bandage extends ItemModule {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    use() {\r\n        this.player.health.heal('head', 3);\r\n    }\r\n}",null,"let weaponStats = [\r\n    {\r\n        \r\n        id: \"hunting-knife\",\r\n        range: 0,\r\n        bash: 0,\r\n        pierce: 6,\r\n        slash: 2,\r\n    }\r\n\r\n];\r\n\r\nexport default weaponStats;","export class ItemStats {\r\n    durability:number;\r\n    weight:number;\r\n    volume:number;\r\n    charges:number;\r\n    decay:number; //in hours\r\n}","import {Item} from \"./item\";\r\nimport items from \"./data/items\";\r\nimport weaponStats from \"./data/weapon-stats\";\r\nimport {Guid} from '../helpers';\r\n\r\nexport class ItemContext {\r\n    items:Array<Item>;\r\n\r\n    constructor() {\r\n        this.items = [];\r\n        this.LoadItems();\r\n    }\r\n\r\n    LoadItems() {\r\n        items.forEach(data => {\r\n            let stats = weaponStats.find(s => s.id === data.module);\r\n            let item = Item.mapItem(data);\r\n            this.AddItem(item);\r\n        })\r\n    }\r\n\r\n    AddItem(item:Item) {\r\n        this.items.push(item);\r\n    }\r\n\r\n    \r\n\r\n    \r\n}","import {Container} from 'aurelia-framework';\r\nimport {Player} from './player';\r\n\r\nexport class Monster extends Player {\r\n    player:Player;\r\n\r\n    constructor() {\r\n        super();\r\n        this.player = Container.instance.get(Player) as Player;\r\n    }\r\n\r\n    attack() {\r\n        \r\n    }\r\n}",null,null,null],"sourceRoot":"..\\src"}